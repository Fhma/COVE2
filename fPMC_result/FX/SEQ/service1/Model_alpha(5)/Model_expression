Min_number = ( 0 ) ; Max_number = ( 5 )
In original model number_of_states = ( 11 ); number_of_transition = ( 22 ) 

Original Transition
0 --- 1  -> (x)
0 --- 4  -> ((-1)*x+(1))
1 --- 2  -> (p11)
1 --- 9  -> ((-1)*p11+(1))
2 --- 7  -> (p21)
2 --- 9  -> ((-1)*p21+(1))
3 --- 6  -> (p31)
3 --- 9  -> ((-1)*p31+(1))
4 --- 8  -> (p41)
4 --- 9  -> ((-1)*p41+(1))
5 --- 6  -> (p51)
5 --- 9  -> ((-1)*p51+(1))
6 --- 9  -> ((-1)*p61+(1))
6 --- 10  -> (p61)
7 --- 1  -> (y2)
7 --- 3  -> ((-1)*y1-y2+(1))
7 --- 5  -> (y1)
8 --- 0  -> (z2)
8 --- 4  -> ((-1)*z1-z2+(1))
8 --- 5  -> (z1)
9 --- 9  -> (1)
10 --- 0  -> (1)


In New Model number of states = ( 18 ); number of transition = ( 30 ) 

New transition
0 --- 1  -> (x)
0 --- 4  -> ((-1)*x+(1))
1 --- 2  -> (p11)
2 --- 7  -> (p21)
3 --- 6  -> (p31)
4 --- 8  -> (p41)
4 --- 9  -> ((-1)*p41+(1))
5 --- 9  ->  ((-1)*p51+(1)) + ( (p51) ) * ( ((-1)*p61+(1)) ) 
6 --- 9  -> ((-1)*p61+(1))
6 --- 10  -> (p61)
7 --- 1  -> (y2)
9 --- 9  -> (1)
10 --- 0  -> (1)
1 --- 11  -> ((-1)*p11+(1))
11 --- 9  -> 1
8 --- 8  -> ( ((-1)*z1-z2+(1)) ) * ( (p41) )
7 --- 12  -> ( ((-1)*y1-y2+(1)) ) + ( (y1) )
12 --- 3  -> ( ((-1)*y1-y2+(1)) ) / ( ( ((-1)*y1-y2+(1)) ) + ( (y1) ) )
12 --- 5  -> ( (y1) ) / ( ( ((-1)*y1-y2+(1)) ) + ( (y1) ) )
2 --- 13  -> ((-1)*p21+(1))
13 --- 9  -> 1
3 --- 14  -> ((-1)*p31+(1))
14 --- 9  -> 1
5 --- 10  -> ( (p51) ) * ( (p61) )
8 --- 15  -> (z2)
15 --- 0  -> 1
8 --- 16  -> (z1)
16 --- 5  -> 1
8 --- 17  -> ( ((-1)*z1-z2+(1)) ) * ( ((-1)*p41+(1)) )
17 --- 9  -> 1


State--Fragment Number--visited--startingPoint--endingPoint
   0          1          true        true          false
   1          1          true        false          false
   2          1          true        false          false
   3          3          true        true          false
   4          1          true        false          true
   5          5          true        true          true
   6          3          true        false          true
   7          1          true        false          false
   8          4          true        true          false
   9          6          true        true          true
   10          7          true        true          true
   11          1          true        false          true
   12          1          true        false          true
   13          1          true        false          true
   14          3          true        false          true
   15          4          true        false          true
   16          4          true        false          true
   17          4          true        false          true

This is transition in Fragment (1) 
    [0, 1]  (x)
    [0, 4]  ((-1)*x+(1))
    [1, 2]  (p11)
    [2, 7]  (p21)
    [7, 1]  (y2)
    [1, 11]  ((-1)*p11+(1))
    [7, 12]  ( ((-1)*y1-y2+(1)) ) + ( (y1) )
    [2, 13]  ((-1)*p21+(1))
    [4, 4]  1
    [11, 11]  1
    [12, 12]  1
    [13, 13]  1

This is transition in Fragment (2) 

This is transition in Fragment (3) 
    [3, 6]  (p31)
    [3, 14]  ((-1)*p31+(1))
    [6, 6]  1
    [14, 14]  1

This is transition in Fragment (4) 
    [8, 8]  ( ((-1)*z1-z2+(1)) ) * ( (p41) )
    [8, 15]  (z2)
    [8, 16]  (z1)
    [8, 17]  ( ((-1)*z1-z2+(1)) ) * ( ((-1)*p41+(1)) )
    [15, 15]  1
    [16, 16]  1
    [17, 17]  1

This is transition in Fragment (5) 
    [5, 5]  1

This is transition in Fragment (6) 
    [9, 9]  1

This is transition for abstract model 
    [4, 8]  ( (p41) ) * ( prob_f1_s4 )
    [4, 9]  ( ((-1)*p41+(1)) ) * ( prob_f1_s4 )
    [5, 9]   ((-1)*p51+(1)) + ( (p51) ) * ( ((-1)*p61+(1)) ) 
    [6, 9]  ( ((-1)*p61+(1)) ) * ( prob_f3_s6 )
    [6, 10]  ( (p61) ) * ( prob_f3_s6 )
    [9, 9]  (1)
    [10, 0]  (1)
    [11, 9]  ( 1 ) * ( prob_f1_s11 )
    [12, 3]  ( ( ((-1)*y1-y2+(1)) ) / ( ( ((-1)*y1-y2+(1)) ) + ( (y1) ) ) ) * ( prob_f1_s12 )
    [12, 5]  ( ( (y1) ) / ( ( ((-1)*y1-y2+(1)) ) + ( (y1) ) ) ) * ( prob_f1_s12 )
    [13, 9]  ( 1 ) * ( prob_f1_s13 )
    [14, 9]  ( 1 ) * ( prob_f3_s14 )
    [5, 10]  ( (p51) ) * ( (p61) )
    [15, 0]  ( 1 ) * ( prob_f4_s15 )
    [16, 5]  ( 1 ) * ( prob_f4_s16 )
    [17, 9]  ( 1 ) * ( prob_f4_s17 )
****************************The expressions start from here; Copying following expressions to MATLAB; Providing values for the parameters needed; Checking the result of <Output_abstract_model> ******
P1_0_1 = ((x)); 
P1_0_2 = (((-1)*x+(1))); 
P1_1_3 = ((p11)); 
P1_1_6 = (((-1)*p11+(1))); 
P1_2_4 = ((p21)); 
P1_2_8 = (((-1)*p21+(1))); 
P1_7_5 = ((y2)); 
P1_7_7 = (( ((-1)*y1-y2+(1)) ) + ( (y1) )); 

prob_f1_s4 =( (P1_0_2)/(1)); 
prob_f1_s11 =( (-1 * ((P1_0_1) * (P1_1_6)))/(P1_1_3*P1_2_4*P1_7_5+(-1))); 
prob_f1_s12 =( (-1 * ((P1_0_1) * (P1_1_3*P1_2_4*P1_7_7)))/(P1_1_3*P1_2_4*P1_7_5+(-1))); 
prob_f1_s13 =( (-1 * ((P1_0_1) * (P1_1_3*P1_2_8)))/(P1_1_3*P1_2_4*P1_7_5+(-1))); 
P3_3_1 = ((p31)); 
P3_3_2 = (((-1)*p31+(1))); 

prob_f3_s6 =( (P3_3_1)/(1)); 
prob_f3_s14 =( (P3_3_2)/(1)); 
P4_8_1 = (( ((-1)*z1-z2+(1)) ) * ( (p41) )); 
P4_8_2 = ((z2)); 
P4_8_3 = ((z1)); 
P4_8_4 = (( ((-1)*z1-z2+(1)) ) * ( ((-1)*p41+(1)) )); 

prob_f4_s15 =( (-1 * (P4_8_2))/(P4_8_1+(-1))); 
prob_f4_s16 =( (-1 * (P4_8_3))/(P4_8_1+(-1))); 
prob_f4_s17 =( (-1 * (P4_8_4))/(P4_8_1+(-1))); 
PX_0_1 = (( (p41) ) * ( prob_f1_s4 )); 
PX_0_2 = (  ( ((-1)*p41+(1)) ) * ( prob_f1_s4 ) + ( 1 ) * ( prob_f1_s11 )  + ( 1 ) * ( prob_f1_s13 ) );
PX_0_8 = (( ( ((-1)*y1-y2+(1)) ) / ( ( ((-1)*y1-y2+(1)) ) + ( (y1) ) ) ) * ( prob_f1_s12 ));
PX_0_9 = (( ( (y1) ) / ( ( ((-1)*y1-y2+(1)) ) + ( (y1) ) ) ) * ( prob_f1_s12 ));
PX_2_4 = ( ( ((-1)*p61+(1)) ) * ( prob_f3_s6 ) + ( 1 ) * ( prob_f3_s14 ) ); 
PX_2_5 = (( (p61) ) * ( prob_f3_s6 ));
PX_3_11 = (( 1 ) * ( prob_f4_s15 )); 
PX_3_12 = (( 1 ) * ( prob_f4_s16 ));
PX_3_13 = (( 1 ) * ( prob_f4_s17 ));
PX_4_3 = ( ((-1)*p51+(1)) + ( (p51) ) * ( ((-1)*p61+(1)) ) ); 
PX_4_10 = (( (p51) ) * ( (p61) ));
PX_5_6 = ((1)); 
PX_6_7 = ((1)); 

Output_abstract_model =( (-1 * (PX_0_1*PX_3_12*PX_4_10+PX_0_8*PX_2_5+PX_0_9*PX_4_10))/(PX_0_1*PX_3_11+(-1))); 
