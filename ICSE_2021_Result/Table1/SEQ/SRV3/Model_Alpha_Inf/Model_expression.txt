Min_number = ( 0 ) ; Max_number = ( 8000 )
In original model number_of_states = ( 23 ); number_of_transition = ( 46 ) 

Original Transition
0 --- 1  -> (x)
0 --- 4  -> ((-1)*x+1)
1 --- 2  -> (p11)
1 --- 21  -> ((-1)*p11+1)
2 --- 7  -> (p21)
2 --- 19  -> ((-1)*p21+1)
3 --- 6  -> (p31)
3 --- 17  -> ((-1)*p31+1)
4 --- 8  -> (p41)
4 --- 15  -> ((-1)*p41+1)
5 --- 6  -> (p51)
5 --- 13  -> ((-1)*p51+1)
6 --- 10  -> (p61)
6 --- 11  -> ((-1)*p61+1)
7 --- 1  -> (y2)
7 --- 3  -> ((-1)*y1-y2+1)
7 --- 5  -> (y1)
8 --- 0  -> (z2)
8 --- 4  -> ((-1)*z1-z2+1)
8 --- 5  -> (z1)
9 --- 9  -> (1)
10 --- 0  -> (1)
11 --- 10  -> (p62)
11 --- 12  -> ((-1)*p62+1)
12 --- 9  -> ((-1)*p63+1)
12 --- 10  -> (p63)
13 --- 6  -> (p52)
13 --- 14  -> ((-1)*p52+1)
14 --- 6  -> (p53)
14 --- 9  -> ((-1)*p53+1)
15 --- 8  -> (p42)
15 --- 16  -> ((-1)*p42+1)
16 --- 8  -> (p43)
16 --- 9  -> ((-1)*p43+1)
17 --- 6  -> (p32)
17 --- 18  -> ((-1)*p32+1)
18 --- 6  -> (p33)
18 --- 9  -> ((-1)*p33+1)
19 --- 7  -> (p22)
19 --- 20  -> ((-1)*p22+1)
20 --- 7  -> (p23)
20 --- 9  -> ((-1)*p23+1)
21 --- 2  -> (p12)
21 --- 22  -> ((-1)*p12+1)
22 --- 2  -> (p13)
22 --- 9  -> ((-1)*p13+1)


In New Model number of states = ( 29 ); number of transition = ( 52 ) 

New transition
0 --- 1  -> (x)
0 --- 4  -> ((-1)*x+1)
1 --- 2  -> (p11)
1 --- 21  -> ((-1)*p11+1)
2 --- 7  -> (p21)
2 --- 19  -> ((-1)*p21+1)
3 --- 6  -> (p31)
3 --- 17  -> ((-1)*p31+1)
4 --- 8  -> (p41)
4 --- 15  -> ((-1)*p41+1)
5 --- 6  -> (p51)
5 --- 13  -> ((-1)*p51+1)
6 --- 11  -> ((-1)*p61+1)
7 --- 1  -> (y2)
7 --- 3  -> ((-1)*y1-y2+1)
7 --- 5  -> (y1)
8 --- 0  -> (z2)
8 --- 4  -> ((-1)*z1-z2+1)
8 --- 5  -> (z1)
9 --- 9  -> (1)
10 --- 0  -> (1)
11 --- 10  -> (p62)
11 --- 12  -> ((-1)*p62+1)
12 --- 9  -> ((-1)*p63+1)
12 --- 10  -> (p63)
13 --- 14  -> ((-1)*p52+1)
14 --- 6  -> (p53)
14 --- 9  -> ((-1)*p53+1)
15 --- 8  -> (p42)
15 --- 16  -> ((-1)*p42+1)
16 --- 8  -> (p43)
17 --- 18  -> ((-1)*p32+1)
18 --- 6  -> (p33)
18 --- 9  -> ((-1)*p33+1)
19 --- 7  -> (p22)
19 --- 20  -> ((-1)*p22+1)
20 --- 7  -> (p23)
21 --- 2  -> (p12)
21 --- 22  -> ((-1)*p12+1)
22 --- 2  -> (p13)
20 --- 23  -> ((-1)*p23+1)
23 --- 9  -> 1
22 --- 24  -> ((-1)*p13+1)
24 --- 9  -> 1
16 --- 25  -> ((-1)*p43+1)
25 --- 9  -> 1
6 --- 26  -> (p61)
26 --- 10  -> 1
13 --- 27  -> (p52)
27 --- 6  -> 1
17 --- 28  -> (p32)
28 --- 6  -> 1


State--Fragment Number--visited--startingPoint--endingPoint
   0          1          true        true          false
   1          1          true        false          false
   2          1          true        false          false
   3          1          true        false          true
   4          1          true        false          false
   5          1          true        false          true
   6          2          true        true          false
   7          1          true        false          false
   8          1          true        false          false
   9          6          true        true          true
   10          7          true        true          true
   11          2          true        false          true
   12          3          true        true          true
   13          4          true        true          false
   14          4          true        false          true
   15          1          true        false          false
   16          1          true        false          false
   17          5          true        true          false
   18          5          true        false          true
   19          1          true        false          false
   20          1          true        false          false
   21          1          true        false          false
   22          1          true        false          false
   23          1          true        false          true
   24          1          true        false          true
   25          1          true        false          true
   26          2          true        false          true
   27          4          true        false          true
   28          5          true        false          true

This is transition in Fragment (1) 
    [0, 1]  (x)
    [0, 4]  ((-1)*x+1)
    [1, 2]  (p11)
    [1, 21]  ((-1)*p11+1)
    [2, 7]  (p21)
    [2, 19]  ((-1)*p21+1)
    [4, 8]  (p41)
    [4, 15]  ((-1)*p41+1)
    [7, 1]  (y2)
    [7, 3]  ((-1)*y1-y2+1)
    [7, 5]  (y1)
    [8, 0]  (z2)
    [8, 4]  ((-1)*z1-z2+1)
    [8, 5]  (z1)
    [15, 8]  (p42)
    [15, 16]  ((-1)*p42+1)
    [16, 8]  (p43)
    [19, 7]  (p22)
    [19, 20]  ((-1)*p22+1)
    [20, 7]  (p23)
    [21, 2]  (p12)
    [21, 22]  ((-1)*p12+1)
    [22, 2]  (p13)
    [20, 23]  ((-1)*p23+1)
    [22, 24]  ((-1)*p13+1)
    [16, 25]  ((-1)*p43+1)
    [3, 3]  1
    [5, 5]  1
    [23, 23]  1
    [24, 24]  1
    [25, 25]  1

This is transition in Fragment (2) 
    [6, 11]  ((-1)*p61+1)
    [6, 26]  (p61)
    [11, 11]  1
    [26, 26]  1

This is transition in Fragment (3) 
    [12, 12]  1

This is transition in Fragment (4) 
    [13, 14]  ((-1)*p52+1)
    [13, 27]  (p52)
    [14, 14]  1
    [27, 27]  1

This is transition in Fragment (5) 
    [17, 18]  ((-1)*p32+1)
    [17, 28]  (p32)
    [18, 18]  1
    [28, 28]  1

This is transition in Fragment (6) 
    [9, 9]  1

This is transition in Fragment (7) 
    [10, 10]  1

This is transition for abstract model 
    [3, 6]  ( (p31) ) * ( prob_f1_s3 )
    [3, 17]  ( ((-1)*p31+1) ) * ( prob_f1_s3 )
    [5, 6]  ( (p51) ) * ( prob_f1_s5 )
    [5, 13]  ( ((-1)*p51+1) ) * ( prob_f1_s5 )
    [9, 9]  (1)
    [10, 0]  (1)
    [11, 10]  ( (p62) ) * ( prob_f2_s11 )
    [11, 12]  ( ((-1)*p62+1) ) * ( prob_f2_s11 )
    [12, 9]  ((-1)*p63+1)
    [12, 10]  (p63)
    [14, 6]  ( (p53) ) * ( prob_f4_s14 )
    [14, 9]  ( ((-1)*p53+1) ) * ( prob_f4_s14 )
    [18, 6]  ( (p33) ) * ( prob_f5_s18 )
    [18, 9]  ( ((-1)*p33+1) ) * ( prob_f5_s18 )
    [23, 9]  ( 1 ) * ( prob_f1_s23 )
    [24, 9]  ( 1 ) * ( prob_f1_s24 )
    [25, 9]  ( 1 ) * ( prob_f1_s25 )
    [26, 10]  ( 1 ) * ( prob_f2_s26 )
    [27, 6]  ( 1 ) * ( prob_f4_s27 )
    [28, 6]  ( 1 ) * ( prob_f5_s28 )
P1_0_1 = ((x)); 
P1_0_2 = (((-1)*x+1)); 
P1_1_3 = ((p11)); 
P1_1_4 = (((-1)*p11+1)); 
P1_2_5 = ((p21)); 
P1_2_6 = (((-1)*p21+1)); 
P1_4_7 = ((p41)); 
P1_4_8 = (((-1)*p41+1)); 
P1_7_9 = ((y2)); 
P1_7_10 = (((-1)*y1-y2+1)); 
P1_7_11 = ((y1)); 
P1_8_12 = ((z2)); 
P1_8_13 = (((-1)*z1-z2+1)); 
P1_8_14 = ((z1)); 
P1_15_15 = ((p42)); 
P1_15_16 = (((-1)*p42+1)); 
P1_16_17 = ((p43)); 
P1_16_26 = (((-1)*p43+1)); 
P1_19_18 = ((p22)); 
P1_19_19 = (((-1)*p22+1)); 
P1_20_20 = ((p23)); 
P1_20_24 = (((-1)*p23+1)); 
P1_21_21 = ((p12)); 
P1_21_22 = (((-1)*p12+1)); 
P1_22_23 = ((p13)); 
P1_22_25 = (((-1)*p13+1)); 

prob_f1_s3 =( (-1 * (P1_0_1*P1_1_4*P1_4_8*P1_2_6*P1_21_22*P1_8_13*P1_15_16*P1_7_10*P1_19_19*P1_22_23*P1_16_17*P1_20_20+P1_0_1*P1_1_4*P1_4_8*P1_2_5*P1_21_21*P1_8_13*P1_15_16*P1_7_10*P1_16_17+P1_0_1*P1_1_4*P1_4_8*P1_2_6*P1_21_21*P1_8_13*P1_15_16*P1_7_10*P1_19_19*P1_16_17*P1_20_20+P1_0_1*P1_1_4*P1_4_8*P1_2_6*P1_21_22*P1_8_13*P1_15_16*P1_7_10*P1_19_18*P1_22_23*P1_16_17+P1_0_1*P1_1_4*P1_4_8*P1_2_5*P1_21_22*P1_8_13*P1_15_16*P1_7_10*P1_22_23*P1_16_17+P1_0_1*P1_1_3*P1_4_8*P1_2_6*P1_8_13*P1_15_16*P1_7_10*P1_19_19*P1_16_17*P1_20_20+P1_0_1*P1_1_3*P1_4_8*P1_2_5*P1_8_13*P1_15_16*P1_7_10*P1_16_17+P1_0_1*P1_1_3*P1_4_8*P1_2_6*P1_8_13*P1_15_16*P1_7_10*P1_19_18*P1_16_17+P1_0_1*P1_1_4*P1_4_8*P1_2_6*P1_21_21*P1_8_13*P1_15_16*P1_7_10*P1_19_18*P1_16_17+P1_0_1*P1_1_4*P1_4_7*P1_2_6*P1_21_22*P1_8_13*P1_7_10*P1_19_19*P1_22_23*P1_20_20+P1_0_1*P1_1_4*P1_4_7*P1_2_5*P1_21_21*P1_8_13*P1_7_10+P1_0_1*P1_1_4*P1_4_7*P1_2_6*P1_21_21*P1_8_13*P1_7_10*P1_19_19*P1_20_20+P1_0_1*P1_1_4*P1_4_7*P1_2_6*P1_21_22*P1_8_13*P1_7_10*P1_19_18*P1_22_23+P1_0_1*P1_1_4*P1_4_7*P1_2_5*P1_21_22*P1_8_13*P1_7_10*P1_22_23+P1_0_1*P1_1_3*P1_4_7*P1_2_6*P1_8_13*P1_7_10*P1_19_19*P1_20_20+P1_0_1*P1_1_3*P1_4_7*P1_2_5*P1_8_13*P1_7_10+P1_0_1*P1_1_3*P1_4_7*P1_2_6*P1_8_13*P1_7_10*P1_19_18+P1_0_1*P1_1_4*P1_4_8*P1_2_6*P1_21_21*P1_8_13*P1_15_15*P1_7_10*P1_19_18+P1_0_1*P1_1_3*P1_4_8*P1_2_6*P1_8_13*P1_15_15*P1_7_10*P1_19_18+P1_0_1*P1_1_3*P1_4_8*P1_2_5*P1_8_13*P1_15_15*P1_7_10+P1_0_1*P1_1_3*P1_4_8*P1_2_6*P1_8_13*P1_15_15*P1_7_10*P1_19_19*P1_20_20+P1_0_1*P1_1_4*P1_4_8*P1_2_5*P1_21_22*P1_8_13*P1_15_15*P1_7_10*P1_22_23+P1_0_1*P1_1_4*P1_4_8*P1_2_6*P1_21_22*P1_8_13*P1_15_15*P1_7_10*P1_19_18*P1_22_23+P1_0_1*P1_1_4*P1_4_8*P1_2_6*P1_21_21*P1_8_13*P1_15_15*P1_7_10*P1_19_19*P1_20_20+P1_0_1*P1_1_4*P1_4_8*P1_2_5*P1_21_21*P1_8_13*P1_15_15*P1_7_10+P1_0_1*P1_1_4*P1_4_8*P1_2_6*P1_21_22*P1_8_13*P1_15_15*P1_7_10*P1_19_19*P1_22_23*P1_20_20+P1_0_1*P1_1_4*P1_4_7*P1_2_6*P1_21_21*P1_8_13*P1_7_10*P1_19_18+(-1)*P1_0_1*P1_1_4*P1_2_6*P1_21_22*P1_7_10*P1_19_19*P1_22_23*P1_20_20+(-1)*P1_0_1*P1_1_4*P1_2_5*P1_21_21*P1_7_10+(-1)*P1_0_1*P1_1_4*P1_2_6*P1_21_21*P1_7_10*P1_19_19*P1_20_20+(-1)*P1_0_1*P1_1_4*P1_2_6*P1_21_22*P1_7_10*P1_19_18*P1_22_23+(-1)*P1_0_1*P1_1_4*P1_2_5*P1_21_22*P1_7_10*P1_22_23+(-1)*P1_0_1*P1_1_3*P1_2_6*P1_7_10*P1_19_19*P1_20_20+(-1)*P1_0_1*P1_1_3*P1_2_5*P1_7_10+(-1)*P1_0_1*P1_1_4*P1_2_6*P1_21_21*P1_7_10*P1_19_18+(-1)*P1_0_1*P1_1_3*P1_2_6*P1_7_10*P1_19_18))/((P1_0_2*P1_4_8*P1_8_12*P1_15_16*P1_16_17+P1_4_7*P1_8_13+P1_4_8*P1_8_13*P1_15_16*P1_16_17+P1_0_2*P1_4_8*P1_8_12*P1_15_15+P1_0_2*P1_4_7*P1_8_12+P1_4_8*P1_8_13*P1_15_15+(-1)) * (P1_1_4*P1_2_6*P1_21_22*P1_7_9*P1_19_19*P1_22_23*P1_20_20+P1_1_3*P1_2_5*P1_7_9+P1_1_3*P1_2_6*P1_7_9*P1_19_19*P1_20_20+P1_1_4*P1_2_6*P1_21_21*P1_7_9*P1_19_18+P1_1_4*P1_2_5*P1_21_21*P1_7_9+P1_1_4*P1_2_6*P1_21_21*P1_7_9*P1_19_19*P1_20_20+P1_1_4*P1_2_6*P1_21_22*P1_7_9*P1_19_18*P1_22_23+P1_1_4*P1_2_5*P1_21_22*P1_7_9*P1_22_23+P1_1_3*P1_2_6*P1_7_9*P1_19_18+(-1)))); 
prob_f1_s5 =( (-1 * (P1_0_2*P1_1_4*P1_4_8*P1_2_6*P1_21_22*P1_8_14*P1_15_16*P1_7_9*P1_19_19*P1_22_23*P1_16_17*P1_20_20+P1_0_2*P1_1_3*P1_4_8*P1_2_5*P1_8_14*P1_15_15*P1_7_9+(-1)*P1_0_2*P1_4_8*P1_8_14*P1_15_15+(-1)*P1_0_1*P1_1_3*P1_2_6*P1_7_11*P1_19_18+(-1)*P1_0_1*P1_1_3*P1_2_5*P1_7_11+(-1)*P1_0_1*P1_1_3*P1_2_6*P1_7_11*P1_19_19*P1_20_20+(-1)*P1_0_1*P1_1_4*P1_2_5*P1_21_22*P1_7_11*P1_22_23+(-1)*P1_0_1*P1_1_4*P1_2_6*P1_21_22*P1_7_11*P1_19_18*P1_22_23+(-1)*P1_0_1*P1_1_4*P1_2_6*P1_21_21*P1_7_11*P1_19_19*P1_20_20+(-1)*P1_0_1*P1_1_4*P1_2_5*P1_21_21*P1_7_11+(-1)*P1_0_1*P1_1_4*P1_2_6*P1_21_22*P1_7_11*P1_19_19*P1_22_23*P1_20_20+P1_0_1*P1_1_4*P1_4_7*P1_2_6*P1_21_21*P1_8_13*P1_7_11*P1_19_18+P1_0_1*P1_1_3*P1_4_7*P1_2_6*P1_8_13*P1_7_11*P1_19_18+P1_0_1*P1_1_3*P1_4_7*P1_2_5*P1_8_13*P1_7_11+P1_0_1*P1_1_3*P1_4_7*P1_2_6*P1_8_13*P1_7_11*P1_19_19*P1_20_20+P1_0_1*P1_1_4*P1_4_7*P1_2_5*P1_21_22*P1_8_13*P1_7_11*P1_22_23+P1_0_1*P1_1_4*P1_4_7*P1_2_6*P1_21_22*P1_8_13*P1_7_11*P1_19_18*P1_22_23+P1_0_1*P1_1_4*P1_4_7*P1_2_6*P1_21_21*P1_8_13*P1_7_11*P1_19_19*P1_20_20+P1_0_1*P1_1_4*P1_4_7*P1_2_5*P1_21_21*P1_8_13*P1_7_11+P1_0_1*P1_1_4*P1_4_7*P1_2_6*P1_21_22*P1_8_13*P1_7_11*P1_19_19*P1_22_23*P1_20_20+P1_0_1*P1_1_4*P1_4_8*P1_2_6*P1_21_21*P1_8_13*P1_15_16*P1_7_11*P1_19_18*P1_16_17+P1_0_1*P1_1_3*P1_4_8*P1_2_6*P1_8_13*P1_15_16*P1_7_11*P1_19_18*P1_16_17+P1_0_1*P1_1_3*P1_4_8*P1_2_5*P1_8_13*P1_15_16*P1_7_11*P1_16_17+P1_0_1*P1_1_3*P1_4_8*P1_2_6*P1_8_13*P1_15_16*P1_7_11*P1_19_19*P1_16_17*P1_20_20+P1_0_1*P1_1_4*P1_4_8*P1_2_5*P1_21_22*P1_8_13*P1_15_16*P1_7_11*P1_22_23*P1_16_17+P1_0_1*P1_1_4*P1_4_8*P1_2_6*P1_21_22*P1_8_13*P1_15_16*P1_7_11*P1_19_18*P1_22_23*P1_16_17+P1_0_1*P1_1_4*P1_4_8*P1_2_6*P1_21_21*P1_8_13*P1_15_16*P1_7_11*P1_19_19*P1_16_17*P1_20_20+P1_0_1*P1_1_4*P1_4_8*P1_2_5*P1_21_21*P1_8_13*P1_15_16*P1_7_11*P1_16_17+P1_0_1*P1_1_4*P1_4_8*P1_2_6*P1_21_22*P1_8_13*P1_15_16*P1_7_11*P1_19_19*P1_22_23*P1_16_17*P1_20_20+P1_0_2*P1_1_4*P1_4_8*P1_2_6*P1_21_21*P1_8_14*P1_15_15*P1_7_9*P1_19_18+P1_0_2*P1_1_4*P1_4_8*P1_2_5*P1_21_21*P1_8_14*P1_15_15*P1_7_9+P1_0_2*P1_1_4*P1_4_8*P1_2_6*P1_21_21*P1_8_14*P1_15_15*P1_7_9*P1_19_19*P1_20_20+P1_0_2*P1_1_4*P1_4_8*P1_2_6*P1_21_22*P1_8_14*P1_15_15*P1_7_9*P1_19_18*P1_22_23+P1_0_2*P1_1_4*P1_4_8*P1_2_5*P1_21_22*P1_8_14*P1_15_15*P1_7_9*P1_22_23+P1_0_2*P1_1_3*P1_4_8*P1_2_6*P1_8_14*P1_15_15*P1_7_9*P1_19_18+P1_0_2*P1_1_4*P1_4_8*P1_2_6*P1_21_22*P1_8_14*P1_15_15*P1_7_9*P1_19_19*P1_22_23*P1_20_20+(-1)*P1_0_2*P1_4_7*P1_8_14+P1_0_2*P1_1_3*P1_4_7*P1_2_5*P1_8_14*P1_7_9+P1_0_2*P1_1_3*P1_4_7*P1_2_6*P1_8_14*P1_7_9*P1_19_19*P1_20_20+P1_0_2*P1_1_4*P1_4_7*P1_2_6*P1_21_21*P1_8_14*P1_7_9*P1_19_18+P1_0_2*P1_1_4*P1_4_7*P1_2_5*P1_21_21*P1_8_14*P1_7_9+P1_0_2*P1_1_4*P1_4_7*P1_2_6*P1_21_21*P1_8_14*P1_7_9*P1_19_19*P1_20_20+P1_0_2*P1_1_4*P1_4_7*P1_2_6*P1_21_22*P1_8_14*P1_7_9*P1_19_18*P1_22_23+P1_0_2*P1_1_4*P1_4_7*P1_2_5*P1_21_22*P1_8_14*P1_7_9*P1_22_23+P1_0_2*P1_1_3*P1_4_7*P1_2_6*P1_8_14*P1_7_9*P1_19_18+P1_0_2*P1_1_4*P1_4_7*P1_2_6*P1_21_22*P1_8_14*P1_7_9*P1_19_19*P1_22_23*P1_20_20+(-1)*P1_0_2*P1_4_8*P1_8_14*P1_15_16*P1_16_17+P1_0_1*P1_1_4*P1_4_8*P1_2_6*P1_21_21*P1_8_13*P1_15_15*P1_7_11*P1_19_18+P1_0_1*P1_1_3*P1_4_8*P1_2_6*P1_8_13*P1_15_15*P1_7_11*P1_19_18+P1_0_1*P1_1_3*P1_4_8*P1_2_5*P1_8_13*P1_15_15*P1_7_11+P1_0_1*P1_1_3*P1_4_8*P1_2_6*P1_8_13*P1_15_15*P1_7_11*P1_19_19*P1_20_20+P1_0_1*P1_1_4*P1_4_8*P1_2_5*P1_21_22*P1_8_13*P1_15_15*P1_7_11*P1_22_23+P1_0_1*P1_1_4*P1_4_8*P1_2_6*P1_21_22*P1_8_13*P1_15_15*P1_7_11*P1_19_18*P1_22_23+P1_0_1*P1_1_4*P1_4_8*P1_2_6*P1_21_21*P1_8_13*P1_15_15*P1_7_11*P1_19_19*P1_20_20+P1_0_1*P1_1_4*P1_4_8*P1_2_5*P1_21_21*P1_8_13*P1_15_15*P1_7_11+P1_0_1*P1_1_4*P1_4_8*P1_2_6*P1_21_22*P1_8_13*P1_15_15*P1_7_11*P1_19_19*P1_22_23*P1_20_20+P1_0_2*P1_1_3*P1_4_8*P1_2_5*P1_8_14*P1_15_16*P1_7_9*P1_16_17+P1_0_2*P1_1_3*P1_4_8*P1_2_6*P1_8_14*P1_15_16*P1_7_9*P1_19_19*P1_16_17*P1_20_20+P1_0_2*P1_1_4*P1_4_8*P1_2_6*P1_21_21*P1_8_14*P1_15_16*P1_7_9*P1_19_18*P1_16_17+P1_0_2*P1_1_4*P1_4_8*P1_2_5*P1_21_21*P1_8_14*P1_15_16*P1_7_9*P1_16_17+P1_0_2*P1_1_4*P1_4_8*P1_2_6*P1_21_21*P1_8_14*P1_15_16*P1_7_9*P1_19_19*P1_16_17*P1_20_20+P1_0_2*P1_1_4*P1_4_8*P1_2_6*P1_21_22*P1_8_14*P1_15_16*P1_7_9*P1_19_18*P1_22_23*P1_16_17+P1_0_2*P1_1_4*P1_4_8*P1_2_5*P1_21_22*P1_8_14*P1_15_16*P1_7_9*P1_22_23*P1_16_17+P1_0_2*P1_1_3*P1_4_8*P1_2_6*P1_8_14*P1_15_16*P1_7_9*P1_19_18*P1_16_17+(-1)*P1_0_1*P1_1_4*P1_2_6*P1_21_21*P1_7_11*P1_19_18+P1_0_2*P1_1_3*P1_4_8*P1_2_6*P1_8_14*P1_15_15*P1_7_9*P1_19_19*P1_20_20))/((P1_0_2*P1_4_8*P1_8_12*P1_15_16*P1_16_17+P1_4_7*P1_8_13+P1_4_8*P1_8_13*P1_15_16*P1_16_17+P1_0_2*P1_4_8*P1_8_12*P1_15_15+P1_0_2*P1_4_7*P1_8_12+P1_4_8*P1_8_13*P1_15_15+(-1)) * (P1_1_4*P1_2_6*P1_21_22*P1_7_9*P1_19_19*P1_22_23*P1_20_20+P1_1_3*P1_2_5*P1_7_9+P1_1_3*P1_2_6*P1_7_9*P1_19_19*P1_20_20+P1_1_4*P1_2_6*P1_21_21*P1_7_9*P1_19_18+P1_1_4*P1_2_5*P1_21_21*P1_7_9+P1_1_4*P1_2_6*P1_21_21*P1_7_9*P1_19_19*P1_20_20+P1_1_4*P1_2_6*P1_21_22*P1_7_9*P1_19_18*P1_22_23+P1_1_4*P1_2_5*P1_21_22*P1_7_9*P1_22_23+P1_1_3*P1_2_6*P1_7_9*P1_19_18+(-1)))); 
prob_f1_s23 =( (-1 * (P1_0_1*P1_1_4*P1_4_8*P1_2_6*P1_21_22*P1_8_13*P1_15_16*P1_19_19*P1_22_23*P1_16_17*P1_20_24+P1_0_1*P1_1_3*P1_4_8*P1_2_6*P1_8_13*P1_15_16*P1_19_19*P1_16_17*P1_20_24+P1_0_1*P1_1_4*P1_4_8*P1_2_6*P1_21_21*P1_8_13*P1_15_16*P1_19_19*P1_16_17*P1_20_24+P1_0_1*P1_1_4*P1_4_7*P1_2_6*P1_21_22*P1_8_13*P1_19_19*P1_22_23*P1_20_24+P1_0_1*P1_1_3*P1_4_7*P1_2_6*P1_8_13*P1_19_19*P1_20_24+P1_0_1*P1_1_4*P1_4_8*P1_2_6*P1_21_21*P1_8_13*P1_15_15*P1_19_19*P1_20_24+P1_0_1*P1_1_3*P1_4_8*P1_2_6*P1_8_13*P1_15_15*P1_19_19*P1_20_24+P1_0_1*P1_1_4*P1_4_8*P1_2_6*P1_21_22*P1_8_13*P1_15_15*P1_19_19*P1_22_23*P1_20_24+P1_0_1*P1_1_4*P1_4_7*P1_2_6*P1_21_21*P1_8_13*P1_19_19*P1_20_24+(-1)*P1_0_1*P1_1_4*P1_2_6*P1_21_22*P1_19_19*P1_22_23*P1_20_24+(-1)*P1_0_1*P1_1_4*P1_2_6*P1_21_21*P1_19_19*P1_20_24+(-1)*P1_0_1*P1_1_3*P1_2_6*P1_19_19*P1_20_24))/((P1_0_2*P1_4_8*P1_8_12*P1_15_16*P1_16_17+P1_4_7*P1_8_13+P1_4_8*P1_8_13*P1_15_16*P1_16_17+P1_0_2*P1_4_8*P1_8_12*P1_15_15+P1_0_2*P1_4_7*P1_8_12+P1_4_8*P1_8_13*P1_15_15+(-1)) * (P1_1_4*P1_2_6*P1_21_22*P1_7_9*P1_19_19*P1_22_23*P1_20_20+P1_1_3*P1_2_5*P1_7_9+P1_1_3*P1_2_6*P1_7_9*P1_19_19*P1_20_20+P1_1_4*P1_2_6*P1_21_21*P1_7_9*P1_19_18+P1_1_4*P1_2_5*P1_21_21*P1_7_9+P1_1_4*P1_2_6*P1_21_21*P1_7_9*P1_19_19*P1_20_20+P1_1_4*P1_2_6*P1_21_22*P1_7_9*P1_19_18*P1_22_23+P1_1_4*P1_2_5*P1_21_22*P1_7_9*P1_22_23+P1_1_3*P1_2_6*P1_7_9*P1_19_18+(-1)))); 
prob_f1_s24 =( (-1 * (P1_0_1*P1_1_4*P1_4_8*P1_21_22*P1_8_13*P1_15_16*P1_22_25*P1_16_17+P1_0_1*P1_1_4*P1_4_7*P1_21_22*P1_8_13*P1_22_25+(-1)*P1_0_1*P1_1_4*P1_21_22*P1_22_25+P1_0_1*P1_1_4*P1_4_8*P1_21_22*P1_8_13*P1_15_15*P1_22_25))/((P1_0_2*P1_4_8*P1_8_12*P1_15_16*P1_16_17+P1_4_7*P1_8_13+P1_4_8*P1_8_13*P1_15_16*P1_16_17+P1_0_2*P1_4_8*P1_8_12*P1_15_15+P1_0_2*P1_4_7*P1_8_12+P1_4_8*P1_8_13*P1_15_15+(-1)) * (P1_1_4*P1_2_6*P1_21_22*P1_7_9*P1_19_19*P1_22_23*P1_20_20+P1_1_3*P1_2_5*P1_7_9+P1_1_3*P1_2_6*P1_7_9*P1_19_19*P1_20_20+P1_1_4*P1_2_6*P1_21_21*P1_7_9*P1_19_18+P1_1_4*P1_2_5*P1_21_21*P1_7_9+P1_1_4*P1_2_6*P1_21_21*P1_7_9*P1_19_19*P1_20_20+P1_1_4*P1_2_6*P1_21_22*P1_7_9*P1_19_18*P1_22_23+P1_1_4*P1_2_5*P1_21_22*P1_7_9*P1_22_23+P1_1_3*P1_2_6*P1_7_9*P1_19_18+(-1)))); 
prob_f1_s25 =( (-1 * (P1_0_2*P1_4_8*P1_15_16*P1_16_26))/(P1_0_2*P1_4_8*P1_8_12*P1_15_16*P1_16_17+P1_4_7*P1_8_13+P1_4_8*P1_8_13*P1_15_16*P1_16_17+P1_0_2*P1_4_8*P1_8_12*P1_15_15+P1_0_2*P1_4_7*P1_8_12+P1_4_8*P1_8_13*P1_15_15+(-1))); 
P2_6_1 = (((-1)*p61+1)); 
P2_6_2 = ((p61)); 

prob_f2_s11 =( (P2_6_1)/(1)); 
prob_f2_s26 =( (P2_6_2)/(1)); 
P4_13_1 = (((-1)*p52+1)); 
P4_13_2 = ((p52)); 

prob_f4_s14 =( (P4_13_1)/(1)); 
prob_f4_s27 =( (P4_13_2)/(1)); 
P5_17_1 = (((-1)*p32+1)); 
P5_17_2 = ((p32)); 

prob_f5_s18 =( (P5_17_1)/(1)); 
prob_f5_s28 =( (P5_17_2)/(1)); 
PX_0_1 = ( ( (p31) ) * ( prob_f1_s3 ) + ( (p51) ) * ( prob_f1_s5 ) ); 
PX_0_2 = (( ((-1)*p31+1) ) * ( prob_f1_s3 ));
PX_0_3 = (( ((-1)*p51+1) ) * ( prob_f1_s5 ));
PX_0_14 = (  ( 1 ) * ( prob_f1_s23 ) + ( 1 ) * ( prob_f1_s24 )  + ( 1 ) * ( prob_f1_s25 ) );
PX_1_6 = ( ( (p62) ) * ( prob_f2_s11 ) + ( 1 ) * ( prob_f2_s26 ) ); 
PX_1_7 = (( ((-1)*p62+1) ) * ( prob_f2_s11 ));
PX_2_8 = (((-1)*p63+1)); 
PX_2_9 = ((p63));
PX_3_10 = ( ( (p53) ) * ( prob_f4_s14 ) + ( 1 ) * ( prob_f4_s27 ) ); 
PX_3_11 = (( ((-1)*p53+1) ) * ( prob_f4_s14 ));
PX_4_12 = ( ( (p33) ) * ( prob_f5_s18 ) + ( 1 ) * ( prob_f5_s28 ) ); 
PX_4_13 = (( ((-1)*p33+1) ) * ( prob_f5_s18 ));
PX_5_4 = ((1)); 
PX_6_5 = ((1)); 

Output_abstract_model =( ((PX_0_3*PX_3_10+PX_0_1+PX_0_2*PX_4_12) * (PX_1_7*PX_2_9+PX_1_6))/(1)); 
