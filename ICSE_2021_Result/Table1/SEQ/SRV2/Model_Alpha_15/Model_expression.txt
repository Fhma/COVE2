Min_number = ( 0 ) ; Max_number = ( 15 )
In original model number_of_states = ( 17 ); number_of_transition = ( 34 ) 

Original Transition
0 --- 1  -> (x)
0 --- 4  -> ((-1)*x+1)
1 --- 2  -> (p11)
1 --- 16  -> ((-1)*p11+1)
2 --- 7  -> (p21)
2 --- 15  -> ((-1)*p21+1)
3 --- 6  -> (p31)
3 --- 14  -> ((-1)*p31+1)
4 --- 8  -> (p41)
4 --- 13  -> ((-1)*p41+1)
5 --- 6  -> (p51)
5 --- 12  -> ((-1)*p51+1)
6 --- 10  -> (p61)
6 --- 11  -> ((-1)*p61+1)
7 --- 1  -> (y2)
7 --- 3  -> ((-1)*y1-y2+1)
7 --- 5  -> (y1)
8 --- 0  -> (z2)
8 --- 4  -> ((-1)*z1-z2+1)
8 --- 5  -> (z1)
9 --- 9  -> (1)
10 --- 0  -> (1)
11 --- 9  -> ((-1)*p62+1)
11 --- 10  -> (p62)
12 --- 6  -> (p52)
12 --- 9  -> ((-1)*p52+1)
13 --- 8  -> (p42)
13 --- 9  -> ((-1)*p42+1)
14 --- 6  -> (p32)
14 --- 9  -> ((-1)*p32+1)
15 --- 7  -> (p22)
15 --- 9  -> ((-1)*p22+1)
16 --- 2  -> (p12)
16 --- 9  -> ((-1)*p12+1)


In New Model number of states = ( 21 ); number of transition = ( 38 ) 

New transition
0 --- 1  -> (x)
0 --- 4  -> ((-1)*x+1)
1 --- 2  -> (p11)
1 --- 16  -> ((-1)*p11+1)
2 --- 7  -> (p21)
2 --- 15  -> ((-1)*p21+1)
3 --- 6  -> (p31)
3 --- 14  -> ((-1)*p31+1)
4 --- 8  -> (p41)
4 --- 13  -> ((-1)*p41+1)
5 --- 6  -> (p51)
5 --- 12  -> ((-1)*p51+1)
6 --- 11  -> ((-1)*p61+1)
7 --- 1  -> (y2)
7 --- 3  -> ((-1)*y1-y2+1)
7 --- 5  -> (y1)
8 --- 0  -> (z2)
8 --- 4  -> ((-1)*z1-z2+1)
8 --- 5  -> (z1)
9 --- 9  -> (1)
10 --- 0  -> (1)
11 --- 9  -> ((-1)*p62+1)
11 --- 10  -> (p62)
12 --- 6  -> (p52)
12 --- 9  -> ((-1)*p52+1)
13 --- 8  -> (p42)
14 --- 6  -> (p32)
14 --- 9  -> ((-1)*p32+1)
15 --- 7  -> (p22)
16 --- 2  -> (p12)
16 --- 17  -> ((-1)*p12+1)
17 --- 9  -> 1
13 --- 18  -> ((-1)*p42+1)
18 --- 9  -> 1
15 --- 19  -> ((-1)*p22+1)
19 --- 9  -> 1
6 --- 20  -> (p61)
20 --- 10  -> 1


State--Fragment Number--visited--startingPoint--endingPoint
   0          1          true        true          false
   1          1          true        false          false
   2          1          true        false          false
   3          1          true        false          true
   4          1          true        false          false
   5          1          true        false          true
   6          2          true        true          false
   7          1          true        false          false
   8          1          true        false          false
   9          5          true        true          true
   10          6          true        true          true
   11          2          true        false          true
   12          3          true        true          true
   13          1          true        false          false
   14          4          true        true          true
   15          1          true        false          false
   16          1          true        false          false
   17          1          true        false          true
   18          1          true        false          true
   19          1          true        false          true
   20          2          true        false          true

This is transition in Fragment (1) 
    [0, 1]  (x)
    [0, 4]  ((-1)*x+1)
    [1, 2]  (p11)
    [1, 16]  ((-1)*p11+1)
    [2, 7]  (p21)
    [2, 15]  ((-1)*p21+1)
    [4, 8]  (p41)
    [4, 13]  ((-1)*p41+1)
    [7, 1]  (y2)
    [7, 3]  ((-1)*y1-y2+1)
    [7, 5]  (y1)
    [8, 0]  (z2)
    [8, 4]  ((-1)*z1-z2+1)
    [8, 5]  (z1)
    [13, 8]  (p42)
    [15, 7]  (p22)
    [16, 2]  (p12)
    [16, 17]  ((-1)*p12+1)
    [13, 18]  ((-1)*p42+1)
    [15, 19]  ((-1)*p22+1)
    [3, 3]  1
    [5, 5]  1
    [17, 17]  1
    [18, 18]  1
    [19, 19]  1

This is transition in Fragment (2) 
    [6, 11]  ((-1)*p61+1)
    [6, 20]  (p61)
    [11, 11]  1
    [20, 20]  1

This is transition in Fragment (3) 
    [12, 12]  1

This is transition in Fragment (4) 
    [14, 14]  1

This is transition in Fragment (5) 
    [9, 9]  1

This is transition in Fragment (6) 
    [10, 10]  1

This is transition for abstract model 
    [3, 6]  ( (p31) ) * ( prob_f1_s3 )
    [3, 14]  ( ((-1)*p31+1) ) * ( prob_f1_s3 )
    [5, 6]  ( (p51) ) * ( prob_f1_s5 )
    [5, 12]  ( ((-1)*p51+1) ) * ( prob_f1_s5 )
    [9, 9]  (1)
    [10, 0]  (1)
    [11, 9]  ( ((-1)*p62+1) ) * ( prob_f2_s11 )
    [11, 10]  ( (p62) ) * ( prob_f2_s11 )
    [12, 6]  (p52)
    [12, 9]  ((-1)*p52+1)
    [14, 6]  (p32)
    [14, 9]  ((-1)*p32+1)
    [17, 9]  ( 1 ) * ( prob_f1_s17 )
    [18, 9]  ( 1 ) * ( prob_f1_s18 )
    [19, 9]  ( 1 ) * ( prob_f1_s19 )
    [20, 10]  ( 1 ) * ( prob_f2_s20 )
P1_0_1 = ((x)); 
P1_0_2 = (((-1)*x+1)); 
P1_1_3 = ((p11)); 
P1_1_4 = (((-1)*p11+1)); 
P1_2_5 = ((p21)); 
P1_2_6 = (((-1)*p21+1)); 
P1_4_7 = ((p41)); 
P1_4_8 = (((-1)*p41+1)); 
P1_7_9 = ((y2)); 
P1_7_10 = (((-1)*y1-y2+1)); 
P1_7_11 = ((y1)); 
P1_8_12 = ((z2)); 
P1_8_13 = (((-1)*z1-z2+1)); 
P1_8_14 = ((z1)); 
P1_13_15 = ((p42)); 
P1_13_19 = (((-1)*p42+1)); 
P1_15_16 = ((p22)); 
P1_15_20 = (((-1)*p22+1)); 
P1_16_17 = ((p12)); 
P1_16_18 = (((-1)*p12+1)); 

prob_f1_s3 =( (-1 * (P1_0_1*P1_1_4*P1_4_8*P1_2_6*P1_16_17*P1_8_13*P1_13_15*P1_7_10*P1_15_16+P1_0_1*P1_1_3*P1_4_8*P1_2_6*P1_8_13*P1_13_15*P1_7_10*P1_15_16+P1_0_1*P1_1_3*P1_4_8*P1_2_5*P1_8_13*P1_13_15*P1_7_10+P1_0_1*P1_1_4*P1_4_7*P1_2_5*P1_16_17*P1_8_13*P1_7_10+P1_0_1*P1_1_3*P1_4_7*P1_2_5*P1_8_13*P1_7_10+P1_0_1*P1_1_3*P1_4_7*P1_2_6*P1_8_13*P1_7_10*P1_15_16+P1_0_1*P1_1_4*P1_4_7*P1_2_6*P1_16_17*P1_8_13*P1_7_10*P1_15_16+P1_0_1*P1_1_4*P1_4_8*P1_2_5*P1_16_17*P1_8_13*P1_13_15*P1_7_10+(-1)*P1_0_1*P1_1_4*P1_2_6*P1_16_17*P1_7_10*P1_15_16+(-1)*P1_0_1*P1_1_3*P1_2_6*P1_7_10*P1_15_16+(-1)*P1_0_1*P1_1_4*P1_2_5*P1_16_17*P1_7_10+(-1)*P1_0_1*P1_1_3*P1_2_5*P1_7_10))/((P1_0_2*P1_4_8*P1_8_12*P1_13_15+P1_4_8*P1_8_13*P1_13_15+P1_0_2*P1_4_7*P1_8_12+P1_4_7*P1_8_13+(-1)) * (P1_1_4*P1_2_6*P1_16_17*P1_7_9*P1_15_16+P1_1_3*P1_2_6*P1_7_9*P1_15_16+P1_1_4*P1_2_5*P1_16_17*P1_7_9+P1_1_3*P1_2_5*P1_7_9+(-1)))); 
prob_f1_s5 =( (-1 * (P1_0_2*P1_1_4*P1_4_8*P1_2_6*P1_16_17*P1_8_14*P1_13_15*P1_7_9*P1_15_16+(-1)*P1_0_2*P1_4_7*P1_8_14+(-1)*P1_0_1*P1_1_3*P1_2_5*P1_7_11+(-1)*P1_0_1*P1_1_3*P1_2_6*P1_7_11*P1_15_16+(-1)*P1_0_1*P1_1_4*P1_2_6*P1_16_17*P1_7_11*P1_15_16+P1_0_1*P1_1_4*P1_4_8*P1_2_5*P1_16_17*P1_8_13*P1_13_15*P1_7_11+P1_0_1*P1_1_3*P1_4_8*P1_2_5*P1_8_13*P1_13_15*P1_7_11+P1_0_1*P1_1_3*P1_4_8*P1_2_6*P1_8_13*P1_13_15*P1_7_11*P1_15_16+P1_0_1*P1_1_4*P1_4_8*P1_2_6*P1_16_17*P1_8_13*P1_13_15*P1_7_11*P1_15_16+P1_0_2*P1_1_4*P1_4_7*P1_2_5*P1_16_17*P1_8_14*P1_7_9+P1_0_2*P1_1_3*P1_4_7*P1_2_5*P1_8_14*P1_7_9+P1_0_2*P1_1_4*P1_4_7*P1_2_6*P1_16_17*P1_8_14*P1_7_9*P1_15_16+(-1)*P1_0_2*P1_4_8*P1_8_14*P1_13_15+P1_0_1*P1_1_4*P1_4_7*P1_2_5*P1_16_17*P1_8_13*P1_7_11+P1_0_1*P1_1_3*P1_4_7*P1_2_5*P1_8_13*P1_7_11+P1_0_1*P1_1_3*P1_4_7*P1_2_6*P1_8_13*P1_7_11*P1_15_16+P1_0_1*P1_1_4*P1_4_7*P1_2_6*P1_16_17*P1_8_13*P1_7_11*P1_15_16+P1_0_2*P1_1_3*P1_4_8*P1_2_6*P1_8_14*P1_13_15*P1_7_9*P1_15_16+P1_0_2*P1_1_4*P1_4_8*P1_2_5*P1_16_17*P1_8_14*P1_13_15*P1_7_9+P1_0_2*P1_1_3*P1_4_8*P1_2_5*P1_8_14*P1_13_15*P1_7_9+(-1)*P1_0_1*P1_1_4*P1_2_5*P1_16_17*P1_7_11+P1_0_2*P1_1_3*P1_4_7*P1_2_6*P1_8_14*P1_7_9*P1_15_16))/((P1_0_2*P1_4_8*P1_8_12*P1_13_15+P1_4_8*P1_8_13*P1_13_15+P1_0_2*P1_4_7*P1_8_12+P1_4_7*P1_8_13+(-1)) * (P1_1_4*P1_2_6*P1_16_17*P1_7_9*P1_15_16+P1_1_3*P1_2_6*P1_7_9*P1_15_16+P1_1_4*P1_2_5*P1_16_17*P1_7_9+P1_1_3*P1_2_5*P1_7_9+(-1)))); 
prob_f1_s17 =( (-1 * (P1_0_1*P1_1_4*P1_4_8*P1_16_18*P1_8_13*P1_13_15+(-1)*P1_0_1*P1_1_4*P1_16_18+P1_0_1*P1_1_4*P1_4_7*P1_16_18*P1_8_13))/((P1_0_2*P1_4_8*P1_8_12*P1_13_15+P1_4_8*P1_8_13*P1_13_15+P1_0_2*P1_4_7*P1_8_12+P1_4_7*P1_8_13+(-1)) * (P1_1_4*P1_2_6*P1_16_17*P1_7_9*P1_15_16+P1_1_3*P1_2_6*P1_7_9*P1_15_16+P1_1_4*P1_2_5*P1_16_17*P1_7_9+P1_1_3*P1_2_5*P1_7_9+(-1)))); 
prob_f1_s18 =( (-1 * (P1_0_2*P1_4_8*P1_13_19))/(P1_0_2*P1_4_8*P1_8_12*P1_13_15+P1_4_8*P1_8_13*P1_13_15+P1_0_2*P1_4_7*P1_8_12+P1_4_7*P1_8_13+(-1))); 
prob_f1_s19 =( (-1 * (P1_0_1*P1_1_4*P1_4_8*P1_2_6*P1_16_17*P1_8_13*P1_13_15*P1_15_20+P1_0_1*P1_1_3*P1_4_7*P1_2_6*P1_8_13*P1_15_20+P1_0_1*P1_1_4*P1_4_7*P1_2_6*P1_16_17*P1_8_13*P1_15_20+P1_0_1*P1_1_3*P1_4_8*P1_2_6*P1_8_13*P1_13_15*P1_15_20+(-1)*P1_0_1*P1_1_3*P1_2_6*P1_15_20+(-1)*P1_0_1*P1_1_4*P1_2_6*P1_16_17*P1_15_20))/((P1_0_2*P1_4_8*P1_8_12*P1_13_15+P1_4_8*P1_8_13*P1_13_15+P1_0_2*P1_4_7*P1_8_12+P1_4_7*P1_8_13+(-1)) * (P1_1_4*P1_2_6*P1_16_17*P1_7_9*P1_15_16+P1_1_3*P1_2_6*P1_7_9*P1_15_16+P1_1_4*P1_2_5*P1_16_17*P1_7_9+P1_1_3*P1_2_5*P1_7_9+(-1)))); 
P2_6_1 = (((-1)*p61+1)); 
P2_6_2 = ((p61)); 

prob_f2_s11 =( (P2_6_1)/(1)); 
prob_f2_s20 =( (P2_6_2)/(1)); 
PX_0_1 = ( ( (p31) ) * ( prob_f1_s3 ) + ( (p51) ) * ( prob_f1_s5 ) ); 
PX_0_2 = (( ((-1)*p31+1) ) * ( prob_f1_s3 ));
PX_0_3 = (( ((-1)*p51+1) ) * ( prob_f1_s5 ));
PX_0_12 = (  ( 1 ) * ( prob_f1_s17 ) + ( 1 ) * ( prob_f1_s18 )  + ( 1 ) * ( prob_f1_s19 ) );
PX_1_6 = (( ((-1)*p62+1) ) * ( prob_f2_s11 )); 
PX_1_7 = ( ( (p62) ) * ( prob_f2_s11 ) + ( 1 ) * ( prob_f2_s20 ) );
PX_2_8 = ((p52)); 
PX_2_9 = (((-1)*p52+1));
PX_3_10 = ((p32)); 
PX_3_11 = (((-1)*p32+1));
PX_4_4 = ((1)); 
PX_5_5 = ((1)); 

Output_abstract_model =( ((PX_1_7) * (PX_0_3*PX_2_8+PX_0_1+PX_0_2*PX_3_10))/(1)); 
