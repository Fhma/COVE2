Min_number = ( 0 ) ; Max_number = ( 8000 )
In original model number_of_states = ( 29 ); number_of_transition = ( 64 ) 

Original Transition
0 --- 1  -> (x)
0 --- 4  -> ((-1)*x+1)
1 --- 26  -> (z11)/(z11+z12+z13)
1 --- 27  -> (z12)/(z11+z12+z13)
1 --- 28  -> (z13)/(z11+z12+z13)
2 --- 23  -> (z21)/(z21+z22+z23)
2 --- 24  -> (z22)/(z21+z22+z23)
2 --- 25  -> (z23)/(z21+z22+z23)
3 --- 20  -> (z31)/(z31+z32+z33)
3 --- 21  -> (z32)/(z31+z32+z33)
3 --- 22  -> (z33)/(z31+z32+z33)
4 --- 17  -> (z41)/(z41+z42+z43)
4 --- 18  -> (z42)/(z41+z42+z43)
4 --- 19  -> (z43)/(z41+z42+z43)
5 --- 14  -> (z51)/(z51+z52+z53)
5 --- 15  -> (z52)/(z51+z52+z53)
5 --- 16  -> (z53)/(z51+z52+z53)
6 --- 11  -> (z61)/(z61+z62+z63)
6 --- 12  -> (z62)/(z61+z62+z63)
6 --- 13  -> (z63)/(z61+z62+z63)
7 --- 1  -> (y2)
7 --- 3  -> ((-1)*y1-y2+1)
7 --- 5  -> (y1)
8 --- 0  -> (z2)
8 --- 4  -> ((-1)*z1-z2+1)
8 --- 5  -> (z1)
9 --- 9  -> (1)
10 --- 0  -> (1)
11 --- 9  -> ((-1)*p61+1)
11 --- 10  -> (p61)
12 --- 9  -> ((-1)*p62+1)
12 --- 10  -> (p62)
13 --- 9  -> ((-1)*p63+1)
13 --- 10  -> (p63)
14 --- 6  -> (p51)
14 --- 9  -> ((-1)*p51+1)
15 --- 6  -> (p52)
15 --- 9  -> ((-1)*p52+1)
16 --- 6  -> (p53)
16 --- 9  -> ((-1)*p53+1)
17 --- 8  -> (p41)
17 --- 9  -> ((-1)*p41+1)
18 --- 8  -> (p42)
18 --- 9  -> ((-1)*p42+1)
19 --- 8  -> (p43)
19 --- 9  -> ((-1)*p43+1)
20 --- 6  -> (p31)
20 --- 9  -> ((-1)*p31+1)
21 --- 6  -> (p32)
21 --- 9  -> ((-1)*p32+1)
22 --- 6  -> (p33)
22 --- 9  -> ((-1)*p33+1)
23 --- 7  -> (p21)
23 --- 9  -> ((-1)*p21+1)
24 --- 7  -> (p22)
24 --- 9  -> ((-1)*p22+1)
25 --- 7  -> (p23)
25 --- 9  -> ((-1)*p23+1)
26 --- 2  -> (p11)
26 --- 9  -> ((-1)*p11+1)
27 --- 2  -> (p12)
27 --- 9  -> ((-1)*p12+1)
28 --- 2  -> (p13)
28 --- 9  -> ((-1)*p13+1)


In New Model number of states = ( 38 ); number of transition = ( 73 ) 

New transition
0 --- 1  -> (x)
0 --- 4  -> ((-1)*x+1)
1 --- 26  -> (z11)/(z11+z12+z13)
1 --- 27  -> (z12)/(z11+z12+z13)
1 --- 28  -> (z13)/(z11+z12+z13)
2 --- 23  -> (z21)/(z21+z22+z23)
2 --- 24  -> (z22)/(z21+z22+z23)
2 --- 25  -> (z23)/(z21+z22+z23)
3 --- 20  -> (z31)/(z31+z32+z33)
3 --- 21  -> (z32)/(z31+z32+z33)
3 --- 22  -> (z33)/(z31+z32+z33)
4 --- 17  -> (z41)/(z41+z42+z43)
4 --- 18  -> (z42)/(z41+z42+z43)
4 --- 19  -> (z43)/(z41+z42+z43)
5 --- 14  -> (z51)/(z51+z52+z53)
5 --- 15  -> (z52)/(z51+z52+z53)
5 --- 16  -> (z53)/(z51+z52+z53)
6 --- 11  -> (z61)/(z61+z62+z63)
6 --- 12  -> (z62)/(z61+z62+z63)
6 --- 13  -> (z63)/(z61+z62+z63)
7 --- 1  -> (y2)
7 --- 3  -> ((-1)*y1-y2+1)
7 --- 5  -> (y1)
8 --- 0  -> (z2)
8 --- 4  -> ((-1)*z1-z2+1)
8 --- 5  -> (z1)
9 --- 9  -> (1)
10 --- 0  -> (1)
11 --- 9  -> ((-1)*p61+1)
11 --- 10  -> (p61)
12 --- 9  -> ((-1)*p62+1)
12 --- 10  -> (p62)
13 --- 9  -> ((-1)*p63+1)
13 --- 10  -> (p63)
14 --- 6  -> (p51)
14 --- 9  -> ((-1)*p51+1)
15 --- 6  -> (p52)
15 --- 9  -> ((-1)*p52+1)
16 --- 6  -> (p53)
16 --- 9  -> ((-1)*p53+1)
17 --- 8  -> (p41)
18 --- 8  -> (p42)
19 --- 8  -> (p43)
20 --- 6  -> (p31)
20 --- 9  -> ((-1)*p31+1)
21 --- 6  -> (p32)
21 --- 9  -> ((-1)*p32+1)
22 --- 6  -> (p33)
22 --- 9  -> ((-1)*p33+1)
23 --- 7  -> (p21)
24 --- 7  -> (p22)
25 --- 7  -> (p23)
26 --- 2  -> (p11)
27 --- 2  -> (p12)
28 --- 2  -> (p13)
17 --- 29  -> ((-1)*p41+1)
29 --- 9  -> 1
18 --- 30  -> ((-1)*p42+1)
30 --- 9  -> 1
19 --- 31  -> ((-1)*p43+1)
31 --- 9  -> 1
23 --- 32  -> ((-1)*p21+1)
32 --- 9  -> 1
24 --- 33  -> ((-1)*p22+1)
33 --- 9  -> 1
25 --- 34  -> ((-1)*p23+1)
34 --- 9  -> 1
26 --- 35  -> ((-1)*p11+1)
35 --- 9  -> 1
27 --- 36  -> ((-1)*p12+1)
36 --- 9  -> 1
28 --- 37  -> ((-1)*p13+1)
37 --- 9  -> 1


State--Fragment Number--visited--startingPoint--endingPoint
   0          1          true        true          false
   1          1          true        false          false
   2          1          true        false          false
   3          1          true        false          true
   4          1          true        false          false
   5          1          true        false          true
   6          2          true        true          false
   7          1          true        false          false
   8          1          true        false          false
   9          9          true        true          true
   10          10          true        true          true
   11          2          true        false          true
   12          2          true        false          true
   13          2          true        false          true
   14          3          true        true          true
   15          4          true        true          true
   16          5          true        true          true
   17          1          true        false          false
   18          1          true        false          false
   19          1          true        false          false
   20          6          true        true          true
   21          7          true        true          true
   22          8          true        true          true
   23          1          true        false          false
   24          1          true        false          false
   25          1          true        false          false
   26          1          true        false          false
   27          1          true        false          false
   28          1          true        false          false
   29          1          true        false          true
   30          1          true        false          true
   31          1          true        false          true
   32          1          true        false          true
   33          1          true        false          true
   34          1          true        false          true
   35          1          true        false          true
   36          1          true        false          true
   37          1          true        false          true

This is transition in Fragment (1) 
    [0, 1]  (x)
    [0, 4]  ((-1)*x+1)
    [1, 26]  (z11)/(z11+z12+z13)
    [1, 27]  (z12)/(z11+z12+z13)
    [1, 28]  (z13)/(z11+z12+z13)
    [2, 23]  (z21)/(z21+z22+z23)
    [2, 24]  (z22)/(z21+z22+z23)
    [2, 25]  (z23)/(z21+z22+z23)
    [4, 17]  (z41)/(z41+z42+z43)
    [4, 18]  (z42)/(z41+z42+z43)
    [4, 19]  (z43)/(z41+z42+z43)
    [7, 1]  (y2)
    [7, 3]  ((-1)*y1-y2+1)
    [7, 5]  (y1)
    [8, 0]  (z2)
    [8, 4]  ((-1)*z1-z2+1)
    [8, 5]  (z1)
    [17, 8]  (p41)
    [18, 8]  (p42)
    [19, 8]  (p43)
    [23, 7]  (p21)
    [24, 7]  (p22)
    [25, 7]  (p23)
    [26, 2]  (p11)
    [27, 2]  (p12)
    [28, 2]  (p13)
    [17, 29]  ((-1)*p41+1)
    [18, 30]  ((-1)*p42+1)
    [19, 31]  ((-1)*p43+1)
    [23, 32]  ((-1)*p21+1)
    [24, 33]  ((-1)*p22+1)
    [25, 34]  ((-1)*p23+1)
    [26, 35]  ((-1)*p11+1)
    [27, 36]  ((-1)*p12+1)
    [28, 37]  ((-1)*p13+1)
    [3, 3]  1
    [5, 5]  1
    [29, 29]  1
    [30, 30]  1
    [31, 31]  1
    [32, 32]  1
    [33, 33]  1
    [34, 34]  1
    [35, 35]  1
    [36, 36]  1
    [37, 37]  1

This is transition in Fragment (2) 
    [6, 11]  (z61)/(z61+z62+z63)
    [6, 12]  (z62)/(z61+z62+z63)
    [6, 13]  (z63)/(z61+z62+z63)
    [11, 11]  1
    [12, 12]  1
    [13, 13]  1

This is transition in Fragment (3) 
    [14, 14]  1

This is transition in Fragment (4) 
    [15, 15]  1

This is transition in Fragment (5) 
    [16, 16]  1

This is transition in Fragment (6) 
    [20, 20]  1

This is transition in Fragment (7) 
    [21, 21]  1

This is transition in Fragment (8) 
    [22, 22]  1

This is transition in Fragment (9) 
    [9, 9]  1

This is transition in Fragment (10) 
    [10, 10]  1

This is transition for abstract model 
    [3, 20]  ( (z31)/(z31+z32+z33) ) * ( prob_f1_s3 )
    [3, 21]  ( (z32)/(z31+z32+z33) ) * ( prob_f1_s3 )
    [3, 22]  ( (z33)/(z31+z32+z33) ) * ( prob_f1_s3 )
    [5, 14]  ( (z51)/(z51+z52+z53) ) * ( prob_f1_s5 )
    [5, 15]  ( (z52)/(z51+z52+z53) ) * ( prob_f1_s5 )
    [5, 16]  ( (z53)/(z51+z52+z53) ) * ( prob_f1_s5 )
    [9, 9]  (1)
    [10, 0]  (1)
    [11, 9]  ( ((-1)*p61+1) ) * ( prob_f2_s11 )
    [11, 10]  ( (p61) ) * ( prob_f2_s11 )
    [12, 9]  ( ((-1)*p62+1) ) * ( prob_f2_s12 )
    [12, 10]  ( (p62) ) * ( prob_f2_s12 )
    [13, 9]  ( ((-1)*p63+1) ) * ( prob_f2_s13 )
    [13, 10]  ( (p63) ) * ( prob_f2_s13 )
    [14, 6]  (p51)
    [14, 9]  ((-1)*p51+1)
    [15, 6]  (p52)
    [15, 9]  ((-1)*p52+1)
    [16, 6]  (p53)
    [16, 9]  ((-1)*p53+1)
    [20, 6]  (p31)
    [20, 9]  ((-1)*p31+1)
    [21, 6]  (p32)
    [21, 9]  ((-1)*p32+1)
    [22, 6]  (p33)
    [22, 9]  ((-1)*p33+1)
    [29, 9]  ( 1 ) * ( prob_f1_s29 )
    [30, 9]  ( 1 ) * ( prob_f1_s30 )
    [31, 9]  ( 1 ) * ( prob_f1_s31 )
    [32, 9]  ( 1 ) * ( prob_f1_s32 )
    [33, 9]  ( 1 ) * ( prob_f1_s33 )
    [34, 9]  ( 1 ) * ( prob_f1_s34 )
    [35, 9]  ( 1 ) * ( prob_f1_s35 )
    [36, 9]  ( 1 ) * ( prob_f1_s36 )
    [37, 9]  ( 1 ) * ( prob_f1_s37 )
P1_0_1 = ((x)); 
P1_0_2 = (((-1)*x+1)); 
P1_1_3 = ((z11)/(z11+z12+z13)); 
P1_1_4 = ((z12)/(z11+z12+z13)); 
P1_1_5 = ((z13)/(z11+z12+z13)); 
P1_2_6 = ((z21)/(z21+z22+z23)); 
P1_2_7 = ((z22)/(z21+z22+z23)); 
P1_2_8 = ((z23)/(z21+z22+z23)); 
P1_4_9 = ((z41)/(z41+z42+z43)); 
P1_4_10 = ((z42)/(z41+z42+z43)); 
P1_4_11 = ((z43)/(z41+z42+z43)); 
P1_7_12 = ((y2)); 
P1_7_13 = (((-1)*y1-y2+1)); 
P1_7_14 = ((y1)); 
P1_8_15 = ((z2)); 
P1_8_16 = (((-1)*z1-z2+1)); 
P1_8_17 = ((z1)); 
P1_17_18 = ((p41)); 
P1_17_27 = (((-1)*p41+1)); 
P1_18_19 = ((p42)); 
P1_18_28 = (((-1)*p42+1)); 
P1_19_20 = ((p43)); 
P1_19_29 = (((-1)*p43+1)); 
P1_23_21 = ((p21)); 
P1_23_30 = (((-1)*p21+1)); 
P1_24_22 = ((p22)); 
P1_24_31 = (((-1)*p22+1)); 
P1_25_23 = ((p23)); 
P1_25_32 = (((-1)*p23+1)); 
P1_26_24 = ((p11)); 
P1_26_33 = (((-1)*p11+1)); 
P1_27_25 = ((p12)); 
P1_27_34 = (((-1)*p12+1)); 
P1_28_26 = ((p13)); 
P1_28_35 = (((-1)*p13+1)); 

prob_f1_s3 =( (-1 * (P1_0_1*P1_1_5*P1_4_11*P1_28_26*P1_19_20*P1_2_8*P1_8_16*P1_25_23*P1_7_13+P1_0_1*P1_1_5*P1_4_11*P1_28_26*P1_19_20*P1_2_7*P1_8_16*P1_24_22*P1_7_13+P1_0_1*P1_1_4*P1_4_11*P1_27_25*P1_19_20*P1_2_8*P1_8_16*P1_25_23*P1_7_13+P1_0_1*P1_1_3*P1_4_11*P1_26_24*P1_19_20*P1_2_6*P1_8_16*P1_23_21*P1_7_13+P1_0_1*P1_1_3*P1_4_11*P1_26_24*P1_19_20*P1_2_7*P1_8_16*P1_24_22*P1_7_13+P1_0_1*P1_1_4*P1_4_11*P1_27_25*P1_19_20*P1_2_6*P1_8_16*P1_23_21*P1_7_13+P1_0_1*P1_1_4*P1_4_11*P1_27_25*P1_19_20*P1_2_7*P1_8_16*P1_24_22*P1_7_13+P1_0_1*P1_1_3*P1_4_11*P1_26_24*P1_19_20*P1_2_8*P1_8_16*P1_25_23*P1_7_13+P1_0_1*P1_1_5*P1_4_11*P1_28_26*P1_19_20*P1_2_6*P1_8_16*P1_23_21*P1_7_13+P1_0_1*P1_1_5*P1_4_10*P1_28_26*P1_18_19*P1_2_8*P1_8_16*P1_25_23*P1_7_13+P1_0_1*P1_1_5*P1_4_10*P1_28_26*P1_18_19*P1_2_7*P1_8_16*P1_24_22*P1_7_13+P1_0_1*P1_1_4*P1_4_10*P1_27_25*P1_18_19*P1_2_8*P1_8_16*P1_25_23*P1_7_13+P1_0_1*P1_1_3*P1_4_10*P1_26_24*P1_18_19*P1_2_6*P1_8_16*P1_23_21*P1_7_13+P1_0_1*P1_1_3*P1_4_10*P1_26_24*P1_18_19*P1_2_7*P1_8_16*P1_24_22*P1_7_13+P1_0_1*P1_1_4*P1_4_10*P1_27_25*P1_18_19*P1_2_6*P1_8_16*P1_23_21*P1_7_13+P1_0_1*P1_1_4*P1_4_10*P1_27_25*P1_18_19*P1_2_7*P1_8_16*P1_24_22*P1_7_13+P1_0_1*P1_1_3*P1_4_10*P1_26_24*P1_18_19*P1_2_8*P1_8_16*P1_25_23*P1_7_13+P1_0_1*P1_1_5*P1_4_9*P1_28_26*P1_17_18*P1_2_6*P1_8_16*P1_23_21*P1_7_13+P1_0_1*P1_1_3*P1_4_9*P1_26_24*P1_17_18*P1_2_8*P1_8_16*P1_25_23*P1_7_13+P1_0_1*P1_1_4*P1_4_9*P1_27_25*P1_17_18*P1_2_7*P1_8_16*P1_24_22*P1_7_13+P1_0_1*P1_1_4*P1_4_9*P1_27_25*P1_17_18*P1_2_6*P1_8_16*P1_23_21*P1_7_13+P1_0_1*P1_1_3*P1_4_9*P1_26_24*P1_17_18*P1_2_7*P1_8_16*P1_24_22*P1_7_13+P1_0_1*P1_1_3*P1_4_9*P1_26_24*P1_17_18*P1_2_6*P1_8_16*P1_23_21*P1_7_13+P1_0_1*P1_1_4*P1_4_9*P1_27_25*P1_17_18*P1_2_8*P1_8_16*P1_25_23*P1_7_13+P1_0_1*P1_1_5*P1_4_9*P1_28_26*P1_17_18*P1_2_7*P1_8_16*P1_24_22*P1_7_13+P1_0_1*P1_1_5*P1_4_9*P1_28_26*P1_17_18*P1_2_8*P1_8_16*P1_25_23*P1_7_13+P1_0_1*P1_1_5*P1_4_10*P1_28_26*P1_18_19*P1_2_6*P1_8_16*P1_23_21*P1_7_13+(-1)*P1_0_1*P1_1_5*P1_28_26*P1_2_8*P1_25_23*P1_7_13+(-1)*P1_0_1*P1_1_5*P1_28_26*P1_2_7*P1_24_22*P1_7_13+(-1)*P1_0_1*P1_1_4*P1_27_25*P1_2_8*P1_25_23*P1_7_13+(-1)*P1_0_1*P1_1_3*P1_26_24*P1_2_6*P1_23_21*P1_7_13+(-1)*P1_0_1*P1_1_3*P1_26_24*P1_2_7*P1_24_22*P1_7_13+(-1)*P1_0_1*P1_1_4*P1_27_25*P1_2_6*P1_23_21*P1_7_13+(-1)*P1_0_1*P1_1_4*P1_27_25*P1_2_7*P1_24_22*P1_7_13+(-1)*P1_0_1*P1_1_5*P1_28_26*P1_2_6*P1_23_21*P1_7_13+(-1)*P1_0_1*P1_1_3*P1_26_24*P1_2_8*P1_25_23*P1_7_13))/((P1_0_2*P1_4_11*P1_19_20*P1_8_15+P1_4_10*P1_18_19*P1_8_16+P1_4_11*P1_19_20*P1_8_16+P1_0_2*P1_4_9*P1_17_18*P1_8_15+P1_0_2*P1_4_10*P1_18_19*P1_8_15+P1_4_9*P1_17_18*P1_8_16+(-1)) * (P1_1_5*P1_28_26*P1_2_8*P1_25_23*P1_7_12+P1_1_4*P1_27_25*P1_2_8*P1_25_23*P1_7_12+P1_1_3*P1_26_24*P1_2_8*P1_25_23*P1_7_12+P1_1_5*P1_28_26*P1_2_7*P1_24_22*P1_7_12+P1_1_4*P1_27_25*P1_2_7*P1_24_22*P1_7_12+P1_1_3*P1_26_24*P1_2_7*P1_24_22*P1_7_12+P1_1_5*P1_28_26*P1_2_6*P1_23_21*P1_7_12+P1_1_4*P1_27_25*P1_2_6*P1_23_21*P1_7_12+P1_1_3*P1_26_24*P1_2_6*P1_23_21*P1_7_12+(-1)))); 
prob_f1_s5 =( (-1 * (P1_0_2*P1_1_5*P1_4_11*P1_28_26*P1_19_20*P1_2_8*P1_8_17*P1_25_23*P1_7_12+P1_0_2*P1_1_4*P1_4_9*P1_27_25*P1_17_18*P1_2_8*P1_8_17*P1_25_23*P1_7_12+(-1)*P1_0_2*P1_4_9*P1_17_18*P1_8_17+(-1)*P1_0_1*P1_1_3*P1_26_24*P1_2_8*P1_25_23*P1_7_14+(-1)*P1_0_1*P1_1_4*P1_27_25*P1_2_7*P1_24_22*P1_7_14+(-1)*P1_0_1*P1_1_4*P1_27_25*P1_2_6*P1_23_21*P1_7_14+(-1)*P1_0_1*P1_1_3*P1_26_24*P1_2_7*P1_24_22*P1_7_14+(-1)*P1_0_1*P1_1_3*P1_26_24*P1_2_6*P1_23_21*P1_7_14+(-1)*P1_0_1*P1_1_4*P1_27_25*P1_2_8*P1_25_23*P1_7_14+(-1)*P1_0_1*P1_1_5*P1_28_26*P1_2_7*P1_24_22*P1_7_14+(-1)*P1_0_1*P1_1_5*P1_28_26*P1_2_8*P1_25_23*P1_7_14+P1_0_1*P1_1_5*P1_4_10*P1_28_26*P1_18_19*P1_2_6*P1_8_16*P1_23_21*P1_7_14+P1_0_1*P1_1_3*P1_4_10*P1_26_24*P1_18_19*P1_2_8*P1_8_16*P1_25_23*P1_7_14+P1_0_1*P1_1_4*P1_4_10*P1_27_25*P1_18_19*P1_2_7*P1_8_16*P1_24_22*P1_7_14+P1_0_1*P1_1_4*P1_4_10*P1_27_25*P1_18_19*P1_2_6*P1_8_16*P1_23_21*P1_7_14+P1_0_1*P1_1_3*P1_4_10*P1_26_24*P1_18_19*P1_2_7*P1_8_16*P1_24_22*P1_7_14+P1_0_1*P1_1_3*P1_4_10*P1_26_24*P1_18_19*P1_2_6*P1_8_16*P1_23_21*P1_7_14+P1_0_1*P1_1_4*P1_4_10*P1_27_25*P1_18_19*P1_2_8*P1_8_16*P1_25_23*P1_7_14+P1_0_1*P1_1_5*P1_4_10*P1_28_26*P1_18_19*P1_2_7*P1_8_16*P1_24_22*P1_7_14+P1_0_1*P1_1_5*P1_4_10*P1_28_26*P1_18_19*P1_2_8*P1_8_16*P1_25_23*P1_7_14+P1_0_1*P1_1_5*P1_4_11*P1_28_26*P1_19_20*P1_2_6*P1_8_16*P1_23_21*P1_7_14+P1_0_1*P1_1_3*P1_4_11*P1_26_24*P1_19_20*P1_2_8*P1_8_16*P1_25_23*P1_7_14+P1_0_1*P1_1_4*P1_4_11*P1_27_25*P1_19_20*P1_2_7*P1_8_16*P1_24_22*P1_7_14+P1_0_1*P1_1_4*P1_4_11*P1_27_25*P1_19_20*P1_2_6*P1_8_16*P1_23_21*P1_7_14+P1_0_1*P1_1_3*P1_4_11*P1_26_24*P1_19_20*P1_2_7*P1_8_16*P1_24_22*P1_7_14+P1_0_1*P1_1_3*P1_4_11*P1_26_24*P1_19_20*P1_2_6*P1_8_16*P1_23_21*P1_7_14+P1_0_1*P1_1_4*P1_4_11*P1_27_25*P1_19_20*P1_2_8*P1_8_16*P1_25_23*P1_7_14+P1_0_1*P1_1_5*P1_4_11*P1_28_26*P1_19_20*P1_2_7*P1_8_16*P1_24_22*P1_7_14+P1_0_1*P1_1_5*P1_4_11*P1_28_26*P1_19_20*P1_2_8*P1_8_16*P1_25_23*P1_7_14+P1_0_2*P1_1_5*P1_4_9*P1_28_26*P1_17_18*P1_2_7*P1_8_17*P1_24_22*P1_7_12+P1_0_2*P1_1_4*P1_4_9*P1_27_25*P1_17_18*P1_2_7*P1_8_17*P1_24_22*P1_7_12+P1_0_2*P1_1_3*P1_4_9*P1_26_24*P1_17_18*P1_2_7*P1_8_17*P1_24_22*P1_7_12+P1_0_2*P1_1_5*P1_4_9*P1_28_26*P1_17_18*P1_2_6*P1_8_17*P1_23_21*P1_7_12+P1_0_2*P1_1_4*P1_4_9*P1_27_25*P1_17_18*P1_2_6*P1_8_17*P1_23_21*P1_7_12+P1_0_2*P1_1_3*P1_4_9*P1_26_24*P1_17_18*P1_2_6*P1_8_17*P1_23_21*P1_7_12+P1_0_2*P1_1_5*P1_4_9*P1_28_26*P1_17_18*P1_2_8*P1_8_17*P1_25_23*P1_7_12+(-1)*P1_0_2*P1_4_10*P1_18_19*P1_8_17+P1_0_2*P1_1_4*P1_4_10*P1_27_25*P1_18_19*P1_2_8*P1_8_17*P1_25_23*P1_7_12+P1_0_2*P1_1_3*P1_4_10*P1_26_24*P1_18_19*P1_2_8*P1_8_17*P1_25_23*P1_7_12+P1_0_2*P1_1_5*P1_4_10*P1_28_26*P1_18_19*P1_2_7*P1_8_17*P1_24_22*P1_7_12+P1_0_2*P1_1_4*P1_4_10*P1_27_25*P1_18_19*P1_2_7*P1_8_17*P1_24_22*P1_7_12+P1_0_2*P1_1_3*P1_4_10*P1_26_24*P1_18_19*P1_2_7*P1_8_17*P1_24_22*P1_7_12+P1_0_2*P1_1_5*P1_4_10*P1_28_26*P1_18_19*P1_2_6*P1_8_17*P1_23_21*P1_7_12+P1_0_2*P1_1_4*P1_4_10*P1_27_25*P1_18_19*P1_2_6*P1_8_17*P1_23_21*P1_7_12+P1_0_2*P1_1_3*P1_4_10*P1_26_24*P1_18_19*P1_2_6*P1_8_17*P1_23_21*P1_7_12+P1_0_2*P1_1_5*P1_4_10*P1_28_26*P1_18_19*P1_2_8*P1_8_17*P1_25_23*P1_7_12+(-1)*P1_0_2*P1_4_11*P1_19_20*P1_8_17+P1_0_1*P1_1_5*P1_4_9*P1_28_26*P1_17_18*P1_2_6*P1_8_16*P1_23_21*P1_7_14+P1_0_1*P1_1_3*P1_4_9*P1_26_24*P1_17_18*P1_2_8*P1_8_16*P1_25_23*P1_7_14+P1_0_1*P1_1_4*P1_4_9*P1_27_25*P1_17_18*P1_2_7*P1_8_16*P1_24_22*P1_7_14+P1_0_1*P1_1_4*P1_4_9*P1_27_25*P1_17_18*P1_2_6*P1_8_16*P1_23_21*P1_7_14+P1_0_1*P1_1_3*P1_4_9*P1_26_24*P1_17_18*P1_2_7*P1_8_16*P1_24_22*P1_7_14+P1_0_1*P1_1_3*P1_4_9*P1_26_24*P1_17_18*P1_2_6*P1_8_16*P1_23_21*P1_7_14+P1_0_1*P1_1_4*P1_4_9*P1_27_25*P1_17_18*P1_2_8*P1_8_16*P1_25_23*P1_7_14+P1_0_1*P1_1_5*P1_4_9*P1_28_26*P1_17_18*P1_2_7*P1_8_16*P1_24_22*P1_7_14+P1_0_1*P1_1_5*P1_4_9*P1_28_26*P1_17_18*P1_2_8*P1_8_16*P1_25_23*P1_7_14+P1_0_2*P1_1_4*P1_4_11*P1_27_25*P1_19_20*P1_2_8*P1_8_17*P1_25_23*P1_7_12+P1_0_2*P1_1_3*P1_4_11*P1_26_24*P1_19_20*P1_2_8*P1_8_17*P1_25_23*P1_7_12+P1_0_2*P1_1_5*P1_4_11*P1_28_26*P1_19_20*P1_2_7*P1_8_17*P1_24_22*P1_7_12+P1_0_2*P1_1_4*P1_4_11*P1_27_25*P1_19_20*P1_2_7*P1_8_17*P1_24_22*P1_7_12+P1_0_2*P1_1_3*P1_4_11*P1_26_24*P1_19_20*P1_2_7*P1_8_17*P1_24_22*P1_7_12+P1_0_2*P1_1_5*P1_4_11*P1_28_26*P1_19_20*P1_2_6*P1_8_17*P1_23_21*P1_7_12+P1_0_2*P1_1_4*P1_4_11*P1_27_25*P1_19_20*P1_2_6*P1_8_17*P1_23_21*P1_7_12+P1_0_2*P1_1_3*P1_4_11*P1_26_24*P1_19_20*P1_2_6*P1_8_17*P1_23_21*P1_7_12+(-1)*P1_0_1*P1_1_5*P1_28_26*P1_2_6*P1_23_21*P1_7_14+P1_0_2*P1_1_3*P1_4_9*P1_26_24*P1_17_18*P1_2_8*P1_8_17*P1_25_23*P1_7_12))/((P1_0_2*P1_4_11*P1_19_20*P1_8_15+P1_4_10*P1_18_19*P1_8_16+P1_4_11*P1_19_20*P1_8_16+P1_0_2*P1_4_9*P1_17_18*P1_8_15+P1_0_2*P1_4_10*P1_18_19*P1_8_15+P1_4_9*P1_17_18*P1_8_16+(-1)) * (P1_1_5*P1_28_26*P1_2_8*P1_25_23*P1_7_12+P1_1_4*P1_27_25*P1_2_8*P1_25_23*P1_7_12+P1_1_3*P1_26_24*P1_2_8*P1_25_23*P1_7_12+P1_1_5*P1_28_26*P1_2_7*P1_24_22*P1_7_12+P1_1_4*P1_27_25*P1_2_7*P1_24_22*P1_7_12+P1_1_3*P1_26_24*P1_2_7*P1_24_22*P1_7_12+P1_1_5*P1_28_26*P1_2_6*P1_23_21*P1_7_12+P1_1_4*P1_27_25*P1_2_6*P1_23_21*P1_7_12+P1_1_3*P1_26_24*P1_2_6*P1_23_21*P1_7_12+(-1)))); 
prob_f1_s29 =( (-1 * (P1_0_2*P1_4_9*P1_17_27))/(P1_0_2*P1_4_11*P1_19_20*P1_8_15+P1_0_2*P1_4_10*P1_18_19*P1_8_15+P1_0_2*P1_4_9*P1_17_18*P1_8_15+P1_4_11*P1_19_20*P1_8_16+P1_4_10*P1_18_19*P1_8_16+P1_4_9*P1_17_18*P1_8_16+(-1))); 
prob_f1_s30 =( (-1 * (P1_0_2*P1_4_10*P1_18_28))/(P1_0_2*P1_4_11*P1_19_20*P1_8_15+P1_0_2*P1_4_10*P1_18_19*P1_8_15+P1_0_2*P1_4_9*P1_17_18*P1_8_15+P1_4_11*P1_19_20*P1_8_16+P1_4_10*P1_18_19*P1_8_16+P1_4_9*P1_17_18*P1_8_16+(-1))); 
prob_f1_s31 =( (-1 * (P1_0_2*P1_4_11*P1_19_29))/(P1_0_2*P1_4_11*P1_19_20*P1_8_15+P1_4_10*P1_18_19*P1_8_16+P1_4_11*P1_19_20*P1_8_16+P1_0_2*P1_4_9*P1_17_18*P1_8_15+P1_0_2*P1_4_10*P1_18_19*P1_8_15+P1_4_9*P1_17_18*P1_8_16+(-1))); 
prob_f1_s32 =( (-1 * (P1_0_1*P1_1_5*P1_4_11*P1_28_26*P1_19_20*P1_2_6*P1_8_16*P1_23_30+P1_0_1*P1_1_3*P1_4_11*P1_26_24*P1_19_20*P1_2_6*P1_8_16*P1_23_30+P1_0_1*P1_1_4*P1_4_11*P1_27_25*P1_19_20*P1_2_6*P1_8_16*P1_23_30+P1_0_1*P1_1_5*P1_4_10*P1_28_26*P1_18_19*P1_2_6*P1_8_16*P1_23_30+P1_0_1*P1_1_3*P1_4_10*P1_26_24*P1_18_19*P1_2_6*P1_8_16*P1_23_30+P1_0_1*P1_1_4*P1_4_9*P1_27_25*P1_17_18*P1_2_6*P1_8_16*P1_23_30+P1_0_1*P1_1_3*P1_4_9*P1_26_24*P1_17_18*P1_2_6*P1_8_16*P1_23_30+P1_0_1*P1_1_5*P1_4_9*P1_28_26*P1_17_18*P1_2_6*P1_8_16*P1_23_30+P1_0_1*P1_1_4*P1_4_10*P1_27_25*P1_18_19*P1_2_6*P1_8_16*P1_23_30+(-1)*P1_0_1*P1_1_5*P1_28_26*P1_2_6*P1_23_30+(-1)*P1_0_1*P1_1_4*P1_27_25*P1_2_6*P1_23_30+(-1)*P1_0_1*P1_1_3*P1_26_24*P1_2_6*P1_23_30))/((P1_0_2*P1_4_11*P1_19_20*P1_8_15+P1_4_10*P1_18_19*P1_8_16+P1_4_11*P1_19_20*P1_8_16+P1_0_2*P1_4_9*P1_17_18*P1_8_15+P1_0_2*P1_4_10*P1_18_19*P1_8_15+P1_4_9*P1_17_18*P1_8_16+(-1)) * (P1_1_5*P1_28_26*P1_2_8*P1_25_23*P1_7_12+P1_1_5*P1_28_26*P1_2_7*P1_24_22*P1_7_12+P1_1_5*P1_28_26*P1_2_6*P1_23_21*P1_7_12+P1_1_4*P1_27_25*P1_2_8*P1_25_23*P1_7_12+P1_1_4*P1_27_25*P1_2_7*P1_24_22*P1_7_12+P1_1_4*P1_27_25*P1_2_6*P1_23_21*P1_7_12+P1_1_3*P1_26_24*P1_2_8*P1_25_23*P1_7_12+P1_1_3*P1_26_24*P1_2_7*P1_24_22*P1_7_12+P1_1_3*P1_26_24*P1_2_6*P1_23_21*P1_7_12+(-1)))); 
prob_f1_s33 =( (-1 * (P1_0_1*P1_1_5*P1_4_11*P1_28_26*P1_19_20*P1_2_7*P1_8_16*P1_24_31+P1_0_1*P1_1_3*P1_4_11*P1_26_24*P1_19_20*P1_2_7*P1_8_16*P1_24_31+P1_0_1*P1_1_4*P1_4_11*P1_27_25*P1_19_20*P1_2_7*P1_8_16*P1_24_31+P1_0_1*P1_1_5*P1_4_10*P1_28_26*P1_18_19*P1_2_7*P1_8_16*P1_24_31+P1_0_1*P1_1_3*P1_4_10*P1_26_24*P1_18_19*P1_2_7*P1_8_16*P1_24_31+P1_0_1*P1_1_4*P1_4_9*P1_27_25*P1_17_18*P1_2_7*P1_8_16*P1_24_31+P1_0_1*P1_1_3*P1_4_9*P1_26_24*P1_17_18*P1_2_7*P1_8_16*P1_24_31+P1_0_1*P1_1_5*P1_4_9*P1_28_26*P1_17_18*P1_2_7*P1_8_16*P1_24_31+P1_0_1*P1_1_4*P1_4_10*P1_27_25*P1_18_19*P1_2_7*P1_8_16*P1_24_31+(-1)*P1_0_1*P1_1_5*P1_28_26*P1_2_7*P1_24_31+(-1)*P1_0_1*P1_1_4*P1_27_25*P1_2_7*P1_24_31+(-1)*P1_0_1*P1_1_3*P1_26_24*P1_2_7*P1_24_31))/((P1_0_2*P1_4_11*P1_19_20*P1_8_15+P1_4_10*P1_18_19*P1_8_16+P1_4_11*P1_19_20*P1_8_16+P1_0_2*P1_4_9*P1_17_18*P1_8_15+P1_0_2*P1_4_10*P1_18_19*P1_8_15+P1_4_9*P1_17_18*P1_8_16+(-1)) * (P1_1_5*P1_28_26*P1_2_8*P1_25_23*P1_7_12+P1_1_5*P1_28_26*P1_2_7*P1_24_22*P1_7_12+P1_1_5*P1_28_26*P1_2_6*P1_23_21*P1_7_12+P1_1_4*P1_27_25*P1_2_8*P1_25_23*P1_7_12+P1_1_4*P1_27_25*P1_2_7*P1_24_22*P1_7_12+P1_1_4*P1_27_25*P1_2_6*P1_23_21*P1_7_12+P1_1_3*P1_26_24*P1_2_8*P1_25_23*P1_7_12+P1_1_3*P1_26_24*P1_2_7*P1_24_22*P1_7_12+P1_1_3*P1_26_24*P1_2_6*P1_23_21*P1_7_12+(-1)))); 
prob_f1_s34 =( (-1 * (P1_0_1*P1_1_5*P1_4_11*P1_28_26*P1_19_20*P1_2_8*P1_8_16*P1_25_32+P1_0_1*P1_1_3*P1_4_11*P1_26_24*P1_19_20*P1_2_8*P1_8_16*P1_25_32+P1_0_1*P1_1_4*P1_4_11*P1_27_25*P1_19_20*P1_2_8*P1_8_16*P1_25_32+P1_0_1*P1_1_5*P1_4_10*P1_28_26*P1_18_19*P1_2_8*P1_8_16*P1_25_32+P1_0_1*P1_1_3*P1_4_10*P1_26_24*P1_18_19*P1_2_8*P1_8_16*P1_25_32+P1_0_1*P1_1_4*P1_4_9*P1_27_25*P1_17_18*P1_2_8*P1_8_16*P1_25_32+P1_0_1*P1_1_3*P1_4_9*P1_26_24*P1_17_18*P1_2_8*P1_8_16*P1_25_32+P1_0_1*P1_1_5*P1_4_9*P1_28_26*P1_17_18*P1_2_8*P1_8_16*P1_25_32+P1_0_1*P1_1_4*P1_4_10*P1_27_25*P1_18_19*P1_2_8*P1_8_16*P1_25_32+(-1)*P1_0_1*P1_1_5*P1_28_26*P1_2_8*P1_25_32+(-1)*P1_0_1*P1_1_4*P1_27_25*P1_2_8*P1_25_32+(-1)*P1_0_1*P1_1_3*P1_26_24*P1_2_8*P1_25_32))/((P1_0_2*P1_4_11*P1_19_20*P1_8_15+P1_4_10*P1_18_19*P1_8_16+P1_4_11*P1_19_20*P1_8_16+P1_0_2*P1_4_9*P1_17_18*P1_8_15+P1_0_2*P1_4_10*P1_18_19*P1_8_15+P1_4_9*P1_17_18*P1_8_16+(-1)) * (P1_1_5*P1_28_26*P1_2_8*P1_25_23*P1_7_12+P1_1_4*P1_27_25*P1_2_8*P1_25_23*P1_7_12+P1_1_3*P1_26_24*P1_2_8*P1_25_23*P1_7_12+P1_1_5*P1_28_26*P1_2_7*P1_24_22*P1_7_12+P1_1_4*P1_27_25*P1_2_7*P1_24_22*P1_7_12+P1_1_3*P1_26_24*P1_2_7*P1_24_22*P1_7_12+P1_1_5*P1_28_26*P1_2_6*P1_23_21*P1_7_12+P1_1_4*P1_27_25*P1_2_6*P1_23_21*P1_7_12+P1_1_3*P1_26_24*P1_2_6*P1_23_21*P1_7_12+(-1)))); 
prob_f1_s35 =( (-1 * (P1_0_1*P1_1_3*P1_4_11*P1_26_33*P1_19_20*P1_8_16+P1_0_1*P1_1_3*P1_4_10*P1_26_33*P1_18_19*P1_8_16+(-1)*P1_0_1*P1_1_3*P1_26_33+P1_0_1*P1_1_3*P1_4_9*P1_26_33*P1_17_18*P1_8_16))/((P1_0_2*P1_4_11*P1_19_20*P1_8_15+P1_4_10*P1_18_19*P1_8_16+P1_4_11*P1_19_20*P1_8_16+P1_0_2*P1_4_9*P1_17_18*P1_8_15+P1_0_2*P1_4_10*P1_18_19*P1_8_15+P1_4_9*P1_17_18*P1_8_16+(-1)) * (P1_1_5*P1_28_26*P1_2_8*P1_25_23*P1_7_12+P1_1_5*P1_28_26*P1_2_7*P1_24_22*P1_7_12+P1_1_5*P1_28_26*P1_2_6*P1_23_21*P1_7_12+P1_1_4*P1_27_25*P1_2_8*P1_25_23*P1_7_12+P1_1_4*P1_27_25*P1_2_7*P1_24_22*P1_7_12+P1_1_4*P1_27_25*P1_2_6*P1_23_21*P1_7_12+P1_1_3*P1_26_24*P1_2_8*P1_25_23*P1_7_12+P1_1_3*P1_26_24*P1_2_7*P1_24_22*P1_7_12+P1_1_3*P1_26_24*P1_2_6*P1_23_21*P1_7_12+(-1)))); 
prob_f1_s36 =( (-1 * (P1_0_1*P1_1_4*P1_4_11*P1_27_34*P1_19_20*P1_8_16+P1_0_1*P1_1_4*P1_4_10*P1_27_34*P1_18_19*P1_8_16+(-1)*P1_0_1*P1_1_4*P1_27_34+P1_0_1*P1_1_4*P1_4_9*P1_27_34*P1_17_18*P1_8_16))/((P1_0_2*P1_4_11*P1_19_20*P1_8_15+P1_4_10*P1_18_19*P1_8_16+P1_4_11*P1_19_20*P1_8_16+P1_0_2*P1_4_9*P1_17_18*P1_8_15+P1_0_2*P1_4_10*P1_18_19*P1_8_15+P1_4_9*P1_17_18*P1_8_16+(-1)) * (P1_1_5*P1_28_26*P1_2_8*P1_25_23*P1_7_12+P1_1_5*P1_28_26*P1_2_7*P1_24_22*P1_7_12+P1_1_5*P1_28_26*P1_2_6*P1_23_21*P1_7_12+P1_1_4*P1_27_25*P1_2_8*P1_25_23*P1_7_12+P1_1_4*P1_27_25*P1_2_7*P1_24_22*P1_7_12+P1_1_4*P1_27_25*P1_2_6*P1_23_21*P1_7_12+P1_1_3*P1_26_24*P1_2_8*P1_25_23*P1_7_12+P1_1_3*P1_26_24*P1_2_7*P1_24_22*P1_7_12+P1_1_3*P1_26_24*P1_2_6*P1_23_21*P1_7_12+(-1)))); 
prob_f1_s37 =( (-1 * (P1_0_1*P1_1_5*P1_4_11*P1_28_35*P1_19_20*P1_8_16+P1_0_1*P1_1_5*P1_4_10*P1_28_35*P1_18_19*P1_8_16+(-1)*P1_0_1*P1_1_5*P1_28_35+P1_0_1*P1_1_5*P1_4_9*P1_28_35*P1_17_18*P1_8_16))/((P1_0_2*P1_4_11*P1_19_20*P1_8_15+P1_4_10*P1_18_19*P1_8_16+P1_4_11*P1_19_20*P1_8_16+P1_0_2*P1_4_9*P1_17_18*P1_8_15+P1_0_2*P1_4_10*P1_18_19*P1_8_15+P1_4_9*P1_17_18*P1_8_16+(-1)) * (P1_1_5*P1_28_26*P1_2_8*P1_25_23*P1_7_12+P1_1_4*P1_27_25*P1_2_8*P1_25_23*P1_7_12+P1_1_3*P1_26_24*P1_2_8*P1_25_23*P1_7_12+P1_1_5*P1_28_26*P1_2_7*P1_24_22*P1_7_12+P1_1_4*P1_27_25*P1_2_7*P1_24_22*P1_7_12+P1_1_3*P1_26_24*P1_2_7*P1_24_22*P1_7_12+P1_1_5*P1_28_26*P1_2_6*P1_23_21*P1_7_12+P1_1_4*P1_27_25*P1_2_6*P1_23_21*P1_7_12+P1_1_3*P1_26_24*P1_2_6*P1_23_21*P1_7_12+(-1)))); 
P2_6_1 = ((z61)/(z61+z62+z63)); 
P2_6_2 = ((z62)/(z61+z62+z63)); 
P2_6_3 = ((z63)/(z61+z62+z63)); 

prob_f2_s11 =( (P2_6_1)/(1)); 
prob_f2_s12 =( (P2_6_2)/(1)); 
prob_f2_s13 =( (P2_6_3)/(1)); 
PX_0_1 = (( (z31)/(z31+z32+z33) ) * ( prob_f1_s3 )); 
PX_0_2 = (( (z32)/(z31+z32+z33) ) * ( prob_f1_s3 ));
PX_0_3 = (( (z33)/(z31+z32+z33) ) * ( prob_f1_s3 ));
PX_0_4 = (( (z51)/(z51+z52+z53) ) * ( prob_f1_s5 ));
PX_0_5 = (( (z52)/(z51+z52+z53) ) * ( prob_f1_s5 ));
PX_0_6 = (( (z53)/(z51+z52+z53) ) * ( prob_f1_s5 ));
PX_0_23 = (        ( 1 ) * ( prob_f1_s29 ) + ( 1 ) * ( prob_f1_s30 )  + ( 1 ) * ( prob_f1_s31 )  + ( 1 ) * ( prob_f1_s32 )  + ( 1 ) * ( prob_f1_s33 )  + ( 1 ) * ( prob_f1_s34 )  + ( 1 ) * ( prob_f1_s35 )  + ( 1 ) * ( prob_f1_s36 )  + ( 1 ) * ( prob_f1_s37 ) );
PX_1_9 = (  ( ((-1)*p61+1) ) * ( prob_f2_s11 ) + ( ((-1)*p62+1) ) * ( prob_f2_s12 )  + ( ((-1)*p63+1) ) * ( prob_f2_s13 ) ); 
PX_1_10 = (  ( (p61) ) * ( prob_f2_s11 ) + ( (p62) ) * ( prob_f2_s12 )  + ( (p63) ) * ( prob_f2_s13 ) );
PX_2_11 = ((p51)); 
PX_2_12 = (((-1)*p51+1));
PX_3_13 = ((p52)); 
PX_3_14 = (((-1)*p52+1));
PX_4_15 = ((p53)); 
PX_4_16 = (((-1)*p53+1));
PX_5_17 = ((p31)); 
PX_5_18 = (((-1)*p31+1));
PX_6_19 = ((p32)); 
PX_6_20 = (((-1)*p32+1));
PX_7_21 = ((p33)); 
PX_7_22 = (((-1)*p33+1));
PX_8_7 = ((1)); 
PX_9_8 = ((1)); 

Output_abstract_model =( ((PX_1_10) * (PX_0_6*PX_4_15+PX_0_1*PX_5_17+PX_0_2*PX_6_19+PX_0_3*PX_7_21+PX_0_4*PX_2_11+PX_0_5*PX_3_13))/(1)); 
