Min_number = ( 0 ) ; Max_number = ( 15 )
In original model number_of_states = ( 29 ); number_of_transition = ( 58 ) 

Original Transition
0 --- 1  -> (x)
0 --- 4  -> ((-1)*x+1)
1 --- 20  -> (z11)/(z11+z12)
1 --- 21  -> (z12)/(z11+z12)
2 --- 18  -> (z21)/(z21+z22)
2 --- 19  -> (z22)/(z21+z22)
3 --- 16  -> (z31)/(z31+z32)
3 --- 17  -> (z32)/(z31+z32)
4 --- 14  -> (z41)/(z41+z42)
4 --- 15  -> (z42)/(z41+z42)
5 --- 12  -> (z51)/(z51+z52)
5 --- 13  -> (z52)/(z51+z52)
6 --- 10  -> (z61)/(z61+z62)
6 --- 11  -> (z62)/(z61+z62)
7 --- 1  -> (y2)
7 --- 3  -> ((-1)*y1-y2+1)
7 --- 5  -> (y1)
8 --- 0  -> (z2)
8 --- 4  -> ((-1)*z1-z2+1)
8 --- 5  -> (z1)
9 --- 0  -> (1)
10 --- 9  -> (p61)
10 --- 27  -> ((-1)*p61+1)
11 --- 9  -> (p62)
11 --- 27  -> ((-1)*p62+1)
12 --- 6  -> (p51)
12 --- 26  -> ((-1)*p51+1)
13 --- 6  -> (p52)
13 --- 26  -> ((-1)*p52+1)
14 --- 8  -> (p41)
14 --- 25  -> ((-1)*p41+1)
15 --- 8  -> (p42)
15 --- 25  -> ((-1)*p42+1)
16 --- 6  -> (p31)
16 --- 24  -> ((-1)*p31+1)
17 --- 6  -> (p32)
17 --- 24  -> ((-1)*p32+1)
18 --- 7  -> (p21)
18 --- 23  -> ((-1)*p21+1)
19 --- 7  -> (p22)
19 --- 23  -> ((-1)*p22+1)
20 --- 2  -> (p11)
20 --- 22  -> ((-1)*p11+1)
21 --- 2  -> (p12)
21 --- 22  -> ((-1)*p12+1)
22 --- 1  -> (r1)
22 --- 28  -> ((-1)*r1+1)
23 --- 2  -> (r2)
23 --- 28  -> ((-1)*r2+1)
24 --- 3  -> (r3)
24 --- 28  -> ((-1)*r3+1)
25 --- 4  -> (r4)
25 --- 28  -> ((-1)*r4+1)
26 --- 5  -> (r5)
26 --- 28  -> ((-1)*r5+1)
27 --- 6  -> (r6)
27 --- 28  -> ((-1)*r6+1)
28 --- 28  -> (1)


In New Model number of states = ( 42 ); number of transition = ( 73 ) 

New transition
0 --- 1  -> (x)
0 --- 4  -> ((-1)*x+1)
1 --- 20  -> (z11)/(z11+z12)
1 --- 21  -> (z12)/(z11+z12)
2 --- 18  -> (z21)/(z21+z22)
2 --- 19  -> (z22)/(z21+z22)
3 --- 16  -> (z31)/(z31+z32)
3 --- 17  -> (z32)/(z31+z32)
4 --- 14  -> (z41)/(z41+z42)
4 --- 15  -> (z42)/(z41+z42)
5 --- 12  -> (z51)/(z51+z52)
5 --- 13  -> (z52)/(z51+z52)
6 --- 10  -> (z61)/(z61+z62)
6 --- 11  -> (z62)/(z61+z62)
7 --- 1  -> (y2)
7 --- 3  -> ((-1)*y1-y2+1)
7 --- 5  -> (y1)
8 --- 0  -> (z2)
8 --- 4  -> ((-1)*z1-z2+1)
8 --- 5  -> (z1)
9 --- 0  -> (1)
10 --- 9  -> (p61)
10 --- 27  -> ((-1)*p61+1)
11 --- 9  -> (p62)
11 --- 27  -> ((-1)*p62+1)
13 --- 6  -> (p52)
13 --- 26  -> ((-1)*p52+1)
14 --- 8  -> (p41)
14 --- 25  -> ((-1)*p41+1)
15 --- 8  -> (p42)
15 --- 25  -> ((-1)*p42+1)
17 --- 6  -> (p32)
17 --- 24  -> ((-1)*p32+1)
18 --- 7  -> (p21)
18 --- 23  -> ((-1)*p21+1)
19 --- 7  -> (p22)
19 --- 23  -> ((-1)*p22+1)
20 --- 22  -> ((-1)*p11+1)
21 --- 22  -> ((-1)*p12+1)
22 --- 1  -> (r1)
23 --- 2  -> (r2)
25 --- 4  -> (r4)
27 --- 6  -> (r6)
27 --- 28  -> ((-1)*r6+1)
28 --- 28  -> (1)
22 --- 29  -> ((-1)*r1+1)
29 --- 28  -> 1
20 --- 30  -> (p11)
30 --- 2  -> 1
21 --- 31  -> (p12)
31 --- 2  -> 1
25 --- 32  -> ((-1)*r4+1)
32 --- 28  -> 1
24 --- 16  -> ( (r3) ) * ( (z31)/(z31+z32) )
26 --- 12  -> ( (r5) ) * ( (z51)/(z51+z52) )
23 --- 33  -> ((-1)*r2+1)
33 --- 28  -> 1
12 --- 34  -> (p51)
34 --- 6  -> 1
26 --- 35  -> ((-1)*r5+1)
35 --- 28  -> 1
26 --- 36  -> ( (r5) ) * ( (z52)/(z51+z52) )
36 --- 13  -> 1
12 --- 37  -> ((-1)*p51+1)
37 --- 26  -> 1
16 --- 38  -> (p31)
38 --- 6  -> 1
24 --- 39  -> ((-1)*r3+1)
39 --- 28  -> 1
24 --- 40  -> ( (r3) ) * ( (z32)/(z31+z32) )
40 --- 17  -> 1
16 --- 41  -> ((-1)*p31+1)
41 --- 24  -> 1


State--Fragment Number--visited--startingPoint--endingPoint
   0          1          true        true          false
   1          1          true        false          false
   2          1          true        false          false
   3          1          true        false          true
   4          1          true        false          false
   5          1          true        false          true
   6          2          true        true          false
   7          1          true        false          false
   8          1          true        false          false
   9          14          true        true          true
   10          2          true        false          true
   11          2          true        false          true
   12          5          true        true          false
   13          15          true        true          true
   14          1          true        false          false
   15          1          true        false          false
   16          8          true        true          false
   17          16          true        true          true
   18          1          true        false          false
   19          1          true        false          false
   20          1          true        false          false
   21          1          true        false          false
   22          1          true        false          false
   23          1          true        false          false
   24          17          true        true          true
   25          1          true        false          false
   26          18          true        true          true
   27          9          true        true          true
   28          19          true        true          true
   29          1          true        false          true
   30          1          true        false          false
   31          1          true        false          false
   32          1          true        false          true
   33          1          true        false          true
   34          5          true        false          true
   35          10          true        true          true
   36          11          true        true          true
   37          5          true        false          true
   38          8          true        false          true
   39          12          true        true          true
   40          13          true        true          true
   41          8          true        false          true

This is transition in Fragment (1) 
    [0, 1]  (x)
    [0, 4]  ((-1)*x+1)
    [1, 20]  (z11)/(z11+z12)
    [1, 21]  (z12)/(z11+z12)
    [2, 18]  (z21)/(z21+z22)
    [2, 19]  (z22)/(z21+z22)
    [4, 14]  (z41)/(z41+z42)
    [4, 15]  (z42)/(z41+z42)
    [7, 1]  (y2)
    [7, 3]  ((-1)*y1-y2+1)
    [7, 5]  (y1)
    [8, 0]  (z2)
    [8, 4]  ((-1)*z1-z2+1)
    [8, 5]  (z1)
    [14, 8]  (p41)
    [14, 25]  ((-1)*p41+1)
    [15, 8]  (p42)
    [15, 25]  ((-1)*p42+1)
    [18, 7]  (p21)
    [18, 23]  ((-1)*p21+1)
    [19, 7]  (p22)
    [19, 23]  ((-1)*p22+1)
    [20, 22]  ((-1)*p11+1)
    [21, 22]  ((-1)*p12+1)
    [22, 1]  (r1)
    [23, 2]  (r2)
    [25, 4]  (r4)
    [22, 29]  ((-1)*r1+1)
    [20, 30]  (p11)
    [30, 2]  1
    [21, 31]  (p12)
    [31, 2]  1
    [25, 32]  ((-1)*r4+1)
    [23, 33]  ((-1)*r2+1)
    [3, 3]  1
    [5, 5]  1
    [29, 29]  1
    [32, 32]  1
    [33, 33]  1

This is transition in Fragment (2) 
    [6, 10]  (z61)/(z61+z62)
    [6, 11]  (z62)/(z61+z62)
    [10, 10]  1
    [11, 11]  1

This is transition in Fragment (3) 

This is transition in Fragment (4) 

This is transition in Fragment (5) 
    [12, 34]  (p51)
    [12, 37]  ((-1)*p51+1)
    [34, 34]  1
    [37, 37]  1

This is transition in Fragment (6) 

This is transition in Fragment (7) 

This is transition in Fragment (8) 
    [16, 38]  (p31)
    [16, 41]  ((-1)*p31+1)
    [38, 38]  1
    [41, 41]  1

This is transition in Fragment (9) 
    [27, 27]  1

This is transition in Fragment (10) 
    [35, 35]  1

This is transition in Fragment (11) 
    [36, 36]  1

This is transition in Fragment (12) 
    [39, 39]  1

This is transition in Fragment (13) 
    [40, 40]  1

This is transition in Fragment (14) 
    [9, 9]  1

This is transition in Fragment (15) 
    [13, 13]  1

This is transition for abstract model 
    [3, 16]  ( (z31)/(z31+z32) ) * ( prob_f1_s3 )
    [3, 17]  ( (z32)/(z31+z32) ) * ( prob_f1_s3 )
    [5, 12]  ( (z51)/(z51+z52) ) * ( prob_f1_s5 )
    [5, 13]  ( (z52)/(z51+z52) ) * ( prob_f1_s5 )
    [9, 0]  (1)
    [10, 9]  ( (p61) ) * ( prob_f2_s10 )
    [10, 27]  ( ((-1)*p61+1) ) * ( prob_f2_s10 )
    [11, 9]  ( (p62) ) * ( prob_f2_s11 )
    [11, 27]  ( ((-1)*p62+1) ) * ( prob_f2_s11 )
    [13, 6]  (p52)
    [13, 26]  ((-1)*p52+1)
    [17, 6]  (p32)
    [17, 24]  ((-1)*p32+1)
    [27, 6]  (r6)
    [27, 28]  ((-1)*r6+1)
    [28, 28]  (1)
    [29, 28]  ( 1 ) * ( prob_f1_s29 )
    [32, 28]  ( 1 ) * ( prob_f1_s32 )
    [24, 16]  ( (r3) ) * ( (z31)/(z31+z32) )
    [26, 12]  ( (r5) ) * ( (z51)/(z51+z52) )
    [33, 28]  ( 1 ) * ( prob_f1_s33 )
    [34, 6]  ( 1 ) * ( prob_f5_s34 )
    [26, 35]  ((-1)*r5+1)
    [35, 28]  1
    [26, 36]  ( (r5) ) * ( (z52)/(z51+z52) )
    [36, 13]  1
    [37, 26]  ( 1 ) * ( prob_f5_s37 )
    [38, 6]  ( 1 ) * ( prob_f8_s38 )
    [24, 39]  ((-1)*r3+1)
    [39, 28]  1
    [24, 40]  ( (r3) ) * ( (z32)/(z31+z32) )
    [40, 17]  1
    [41, 24]  ( 1 ) * ( prob_f8_s41 )
P1_0_1 = ((x)); 
P1_0_2 = (((-1)*x+1)); 
P1_1_3 = ((z11)/(z11+z12)); 
P1_1_4 = ((z12)/(z11+z12)); 
P1_2_5 = ((z21)/(z21+z22)); 
P1_2_6 = ((z22)/(z21+z22)); 
P1_4_7 = ((z41)/(z41+z42)); 
P1_4_8 = ((z42)/(z41+z42)); 
P1_7_9 = ((y2)); 
P1_7_10 = (((-1)*y1-y2+1)); 
P1_7_11 = ((y1)); 
P1_8_12 = ((z2)); 
P1_8_13 = (((-1)*z1-z2+1)); 
P1_8_14 = ((z1)); 
P1_14_15 = ((p41)); 
P1_14_16 = (((-1)*p41+1)); 
P1_15_17 = ((p42)); 
P1_15_18 = (((-1)*p42+1)); 
P1_18_19 = ((p21)); 
P1_18_20 = (((-1)*p21+1)); 
P1_19_21 = ((p22)); 
P1_19_22 = (((-1)*p22+1)); 
P1_20_23 = (((-1)*p11+1)); 
P1_20_29 = ((p11)); 
P1_21_24 = (((-1)*p12+1)); 
P1_21_31 = ((p12)); 
P1_22_25 = ((r1)); 
P1_22_28 = (((-1)*r1+1)); 
P1_23_26 = ((r2)); 
P1_23_34 = (((-1)*r2+1)); 
P1_25_27 = ((r4)); 
P1_25_33 = (((-1)*r4+1)); 
P1_30_30 = (1); 
P1_31_32 = (1); 

prob_f1_s3 =( (P1_0_1*P1_1_4*P1_4_8*P1_21_31*P1_15_18*P1_25_27*P1_2_6*P1_19_21*P1_7_10+P1_0_1*P1_1_3*P1_4_7*P1_20_29*P1_14_15*P1_8_13*P1_2_6*P1_19_21*P1_7_10+P1_0_1*P1_1_4*P1_4_7*P1_21_31*P1_14_15*P1_8_13*P1_2_5*P1_18_19*P1_7_10+P1_0_1*P1_1_3*P1_4_8*P1_20_29*P1_15_17*P1_8_13*P1_2_5*P1_18_19*P1_7_10+P1_0_1*P1_1_4*P1_4_8*P1_21_31*P1_15_17*P1_8_13*P1_2_5*P1_18_19*P1_7_10+P1_0_1*P1_1_3*P1_4_8*P1_20_29*P1_15_17*P1_8_13*P1_2_6*P1_19_21*P1_7_10+P1_0_1*P1_1_4*P1_4_8*P1_21_31*P1_15_17*P1_8_13*P1_2_6*P1_19_21*P1_7_10+P1_0_1*P1_1_3*P1_4_7*P1_20_29*P1_14_16*P1_25_27*P1_2_5*P1_18_19*P1_7_10+P1_0_1*P1_1_4*P1_4_7*P1_21_31*P1_14_16*P1_25_27*P1_2_5*P1_18_19*P1_7_10+P1_0_1*P1_1_3*P1_4_7*P1_20_29*P1_14_16*P1_25_27*P1_2_6*P1_19_21*P1_7_10+P1_0_1*P1_1_4*P1_4_7*P1_21_31*P1_14_16*P1_25_27*P1_2_6*P1_19_21*P1_7_10+P1_0_1*P1_1_3*P1_4_8*P1_20_29*P1_15_18*P1_25_27*P1_2_5*P1_18_19*P1_7_10+P1_0_1*P1_1_4*P1_4_8*P1_21_31*P1_15_18*P1_25_27*P1_2_5*P1_18_19*P1_7_10+P1_0_1*P1_1_3*P1_4_8*P1_20_29*P1_15_18*P1_25_27*P1_2_6*P1_19_21*P1_7_10+P1_0_1*P1_1_4*P1_4_7*P1_21_31*P1_14_15*P1_8_13*P1_2_6*P1_19_21*P1_7_10+P1_0_1*P1_1_3*P1_4_7*P1_20_29*P1_14_15*P1_8_13*P1_2_5*P1_18_19*P1_7_10+(-1)*P1_0_1*P1_1_4*P1_21_31*P1_2_6*P1_19_21*P1_7_10+(-1)*P1_0_1*P1_1_3*P1_20_29*P1_2_6*P1_19_21*P1_7_10+(-1)*P1_0_1*P1_1_3*P1_20_29*P1_2_5*P1_18_19*P1_7_10+(-1)*P1_0_1*P1_1_4*P1_21_31*P1_2_5*P1_18_19*P1_7_10)/((P1_0_2*P1_4_8*P1_15_17*P1_8_12+P1_4_8*P1_15_18*P1_25_27+P1_4_7*P1_14_16*P1_25_27+P1_4_8*P1_15_17*P1_8_13+P1_0_2*P1_4_7*P1_14_15*P1_8_12+P1_4_7*P1_14_15*P1_8_13+(-1)) * (P1_1_4*P1_21_24*P1_22_25*P1_2_6*P1_19_22*P1_23_26+P1_1_3*P1_20_23*P1_22_25*P1_2_5*P1_18_20*P1_23_26+P1_1_4*P1_21_24*P1_22_25*P1_2_5*P1_18_20*P1_23_26+(-1)*P1_1_4*P1_21_31*P1_2_6*P1_19_21*P1_7_9+(-1)*P1_1_3*P1_20_29*P1_2_6*P1_19_21*P1_7_9+(-1)*P1_1_4*P1_21_31*P1_2_5*P1_18_19*P1_7_9+(-1)*P1_2_6*P1_19_22*P1_23_26+(-1)*P1_1_4*P1_21_24*P1_22_25+P1_1_3*P1_20_23*P1_22_25*P1_2_6*P1_19_22*P1_23_26+(-1)*P1_2_5*P1_18_20*P1_23_26+(-1)*P1_1_3*P1_20_23*P1_22_25+(-1)*P1_1_3*P1_20_29*P1_2_5*P1_18_19*P1_7_9+1))); 
prob_f1_s5 =( (-1 * (P1_0_2*P1_1_4*P1_4_8*P1_21_24*P1_15_17*P1_22_25*P1_8_14*P1_2_6*P1_19_22*P1_23_26+P1_0_2*P1_1_4*P1_4_8*P1_21_24*P1_15_17*P1_22_25*P1_8_14*P1_2_5*P1_18_20*P1_23_26+P1_0_2*P1_1_3*P1_4_8*P1_20_23*P1_15_17*P1_22_25*P1_8_14*P1_2_5*P1_18_20*P1_23_26+P1_0_2*P1_4_8*P1_15_17*P1_8_14+P1_0_2*P1_1_4*P1_4_7*P1_21_24*P1_14_15*P1_22_25*P1_8_14*P1_2_6*P1_19_22*P1_23_26+(-1)*P1_0_2*P1_1_3*P1_4_7*P1_20_29*P1_14_15*P1_8_14*P1_2_5*P1_18_19*P1_7_9+(-1)*P1_0_2*P1_1_3*P1_4_7*P1_20_23*P1_14_15*P1_22_25*P1_8_14+(-1)*P1_0_2*P1_4_7*P1_14_15*P1_8_14*P1_2_5*P1_18_20*P1_23_26+P1_0_2*P1_1_3*P1_4_7*P1_20_23*P1_14_15*P1_22_25*P1_8_14*P1_2_6*P1_19_22*P1_23_26+(-1)*P1_0_2*P1_1_4*P1_4_7*P1_21_24*P1_14_15*P1_22_25*P1_8_14+(-1)*P1_0_2*P1_4_7*P1_14_15*P1_8_14*P1_2_6*P1_19_22*P1_23_26+(-1)*P1_0_2*P1_1_4*P1_4_7*P1_21_31*P1_14_15*P1_8_14*P1_2_5*P1_18_19*P1_7_9+(-1)*P1_0_2*P1_1_3*P1_4_7*P1_20_29*P1_14_15*P1_8_14*P1_2_6*P1_19_21*P1_7_9+(-1)*P1_0_2*P1_1_4*P1_4_7*P1_21_31*P1_14_15*P1_8_14*P1_2_6*P1_19_21*P1_7_9+P1_0_2*P1_1_4*P1_4_7*P1_21_24*P1_14_15*P1_22_25*P1_8_14*P1_2_5*P1_18_20*P1_23_26+P1_0_2*P1_1_3*P1_4_7*P1_20_23*P1_14_15*P1_22_25*P1_8_14*P1_2_5*P1_18_20*P1_23_26+P1_0_2*P1_4_7*P1_14_15*P1_8_14+(-1)*P1_0_2*P1_1_4*P1_4_8*P1_21_31*P1_15_17*P1_8_14*P1_2_6*P1_19_21*P1_7_9+P1_0_1*P1_1_4*P1_21_31*P1_2_5*P1_18_19*P1_7_11+P1_0_1*P1_1_3*P1_20_29*P1_2_6*P1_19_21*P1_7_11+P1_0_1*P1_1_4*P1_21_31*P1_2_6*P1_19_21*P1_7_11+(-1)*P1_0_1*P1_1_3*P1_4_7*P1_20_29*P1_14_15*P1_8_13*P1_2_5*P1_18_19*P1_7_11+(-1)*P1_0_1*P1_1_4*P1_4_7*P1_21_31*P1_14_15*P1_8_13*P1_2_5*P1_18_19*P1_7_11+(-1)*P1_0_1*P1_1_3*P1_4_7*P1_20_29*P1_14_15*P1_8_13*P1_2_6*P1_19_21*P1_7_11+(-1)*P1_0_1*P1_1_4*P1_4_7*P1_21_31*P1_14_15*P1_8_13*P1_2_6*P1_19_21*P1_7_11+(-1)*P1_0_2*P1_1_3*P1_4_8*P1_20_29*P1_15_17*P1_8_14*P1_2_6*P1_19_21*P1_7_9+(-1)*P1_0_2*P1_1_4*P1_4_8*P1_21_31*P1_15_17*P1_8_14*P1_2_5*P1_18_19*P1_7_9+(-1)*P1_0_2*P1_4_8*P1_15_17*P1_8_14*P1_2_6*P1_19_22*P1_23_26+(-1)*P1_0_2*P1_1_4*P1_4_8*P1_21_24*P1_15_17*P1_22_25*P1_8_14+(-1)*P1_0_1*P1_1_3*P1_4_8*P1_20_29*P1_15_17*P1_8_13*P1_2_5*P1_18_19*P1_7_11+(-1)*P1_0_1*P1_1_4*P1_4_8*P1_21_31*P1_15_17*P1_8_13*P1_2_5*P1_18_19*P1_7_11+(-1)*P1_0_1*P1_1_3*P1_4_8*P1_20_29*P1_15_17*P1_8_13*P1_2_6*P1_19_21*P1_7_11+(-1)*P1_0_1*P1_1_4*P1_4_8*P1_21_31*P1_15_17*P1_8_13*P1_2_6*P1_19_21*P1_7_11+(-1)*P1_0_1*P1_1_3*P1_4_7*P1_20_29*P1_14_16*P1_25_27*P1_2_5*P1_18_19*P1_7_11+(-1)*P1_0_1*P1_1_4*P1_4_7*P1_21_31*P1_14_16*P1_25_27*P1_2_5*P1_18_19*P1_7_11+(-1)*P1_0_1*P1_1_3*P1_4_7*P1_20_29*P1_14_16*P1_25_27*P1_2_6*P1_19_21*P1_7_11+(-1)*P1_0_1*P1_1_4*P1_4_7*P1_21_31*P1_14_16*P1_25_27*P1_2_6*P1_19_21*P1_7_11+(-1)*P1_0_1*P1_1_3*P1_4_8*P1_20_29*P1_15_18*P1_25_27*P1_2_5*P1_18_19*P1_7_11+(-1)*P1_0_1*P1_1_4*P1_4_8*P1_21_31*P1_15_18*P1_25_27*P1_2_5*P1_18_19*P1_7_11+(-1)*P1_0_1*P1_1_3*P1_4_8*P1_20_29*P1_15_18*P1_25_27*P1_2_6*P1_19_21*P1_7_11+(-1)*P1_0_1*P1_1_4*P1_4_8*P1_21_31*P1_15_18*P1_25_27*P1_2_6*P1_19_21*P1_7_11+P1_0_2*P1_1_3*P1_4_8*P1_20_23*P1_15_17*P1_22_25*P1_8_14*P1_2_6*P1_19_22*P1_23_26+(-1)*P1_0_2*P1_4_8*P1_15_17*P1_8_14*P1_2_5*P1_18_20*P1_23_26+(-1)*P1_0_2*P1_1_3*P1_4_8*P1_20_23*P1_15_17*P1_22_25*P1_8_14+P1_0_1*P1_1_3*P1_20_29*P1_2_5*P1_18_19*P1_7_11+(-1)*P1_0_2*P1_1_3*P1_4_8*P1_20_29*P1_15_17*P1_8_14*P1_2_5*P1_18_19*P1_7_9))/((P1_0_2*P1_4_8*P1_15_17*P1_8_12+P1_4_8*P1_15_18*P1_25_27+P1_4_7*P1_14_16*P1_25_27+P1_4_8*P1_15_17*P1_8_13+P1_0_2*P1_4_7*P1_14_15*P1_8_12+P1_4_7*P1_14_15*P1_8_13+(-1)) * (P1_1_4*P1_21_24*P1_22_25*P1_2_6*P1_19_22*P1_23_26+P1_1_3*P1_20_23*P1_22_25*P1_2_5*P1_18_20*P1_23_26+P1_1_4*P1_21_24*P1_22_25*P1_2_5*P1_18_20*P1_23_26+(-1)*P1_1_4*P1_21_31*P1_2_6*P1_19_21*P1_7_9+(-1)*P1_1_3*P1_20_29*P1_2_6*P1_19_21*P1_7_9+(-1)*P1_1_4*P1_21_31*P1_2_5*P1_18_19*P1_7_9+(-1)*P1_2_6*P1_19_22*P1_23_26+(-1)*P1_1_4*P1_21_24*P1_22_25+P1_1_3*P1_20_23*P1_22_25*P1_2_6*P1_19_22*P1_23_26+(-1)*P1_2_5*P1_18_20*P1_23_26+(-1)*P1_1_3*P1_20_23*P1_22_25+(-1)*P1_1_3*P1_20_29*P1_2_5*P1_18_19*P1_7_9+1))); 
prob_f1_s29 =( (-1 * (P1_0_1*P1_1_4*P1_4_8*P1_21_24*P1_15_18*P1_22_28*P1_25_27*P1_2_6*P1_19_22*P1_23_26+P1_0_1*P1_1_4*P1_4_7*P1_21_24*P1_14_16*P1_22_28*P1_25_27*P1_2_5*P1_18_20*P1_23_26+P1_0_1*P1_1_3*P1_4_7*P1_20_23*P1_14_16*P1_22_28*P1_25_27*P1_2_6*P1_19_22*P1_23_26+P1_0_1*P1_1_3*P1_4_7*P1_20_23*P1_14_16*P1_22_28*P1_25_27*P1_2_5*P1_18_20*P1_23_26+P1_0_1*P1_1_4*P1_4_7*P1_21_24*P1_14_16*P1_22_28*P1_25_27*P1_2_6*P1_19_22*P1_23_26+(-1)*P1_0_1*P1_1_3*P1_4_8*P1_20_23*P1_15_17*P1_22_28*P1_8_13+(-1)*P1_0_1*P1_1_4*P1_4_8*P1_21_24*P1_15_17*P1_22_28*P1_8_13+P1_0_1*P1_1_4*P1_4_8*P1_21_24*P1_15_17*P1_22_28*P1_8_13*P1_2_5*P1_18_20*P1_23_26+P1_0_1*P1_1_3*P1_4_8*P1_20_23*P1_15_17*P1_22_28*P1_8_13*P1_2_6*P1_19_22*P1_23_26+P1_0_1*P1_1_3*P1_4_8*P1_20_23*P1_15_17*P1_22_28*P1_8_13*P1_2_5*P1_18_20*P1_23_26+P1_0_1*P1_1_4*P1_4_8*P1_21_24*P1_15_17*P1_22_28*P1_8_13*P1_2_6*P1_19_22*P1_23_26+(-1)*P1_0_1*P1_1_3*P1_4_7*P1_20_23*P1_14_16*P1_22_28*P1_25_27+(-1)*P1_0_1*P1_1_4*P1_4_7*P1_21_24*P1_14_16*P1_22_28*P1_25_27+P1_0_1*P1_1_3*P1_4_8*P1_20_23*P1_15_18*P1_22_28*P1_25_27*P1_2_5*P1_18_20*P1_23_26+P1_0_1*P1_1_3*P1_4_8*P1_20_23*P1_15_18*P1_22_28*P1_25_27*P1_2_6*P1_19_22*P1_23_26+P1_0_1*P1_1_4*P1_4_8*P1_21_24*P1_15_18*P1_22_28*P1_25_27*P1_2_5*P1_18_20*P1_23_26+(-1)*P1_0_1*P1_1_4*P1_4_8*P1_21_24*P1_15_18*P1_22_28*P1_25_27+(-1)*P1_0_1*P1_1_3*P1_4_7*P1_20_23*P1_14_15*P1_22_28*P1_8_13+(-1)*P1_0_1*P1_1_4*P1_4_7*P1_21_24*P1_14_15*P1_22_28*P1_8_13+P1_0_1*P1_1_4*P1_4_7*P1_21_24*P1_14_15*P1_22_28*P1_8_13*P1_2_5*P1_18_20*P1_23_26+P1_0_1*P1_1_3*P1_4_7*P1_20_23*P1_14_15*P1_22_28*P1_8_13*P1_2_6*P1_19_22*P1_23_26+P1_0_1*P1_1_3*P1_4_7*P1_20_23*P1_14_15*P1_22_28*P1_8_13*P1_2_5*P1_18_20*P1_23_26+P1_0_1*P1_1_4*P1_4_7*P1_21_24*P1_14_15*P1_22_28*P1_8_13*P1_2_6*P1_19_22*P1_23_26+(-1)*P1_0_1*P1_1_3*P1_4_8*P1_20_23*P1_15_18*P1_22_28*P1_25_27+(-1)*P1_0_1*P1_1_4*P1_21_24*P1_22_28*P1_2_6*P1_19_22*P1_23_26+(-1)*P1_0_1*P1_1_3*P1_20_23*P1_22_28*P1_2_5*P1_18_20*P1_23_26+(-1)*P1_0_1*P1_1_3*P1_20_23*P1_22_28*P1_2_6*P1_19_22*P1_23_26+(-1)*P1_0_1*P1_1_4*P1_21_24*P1_22_28*P1_2_5*P1_18_20*P1_23_26+P1_0_1*P1_1_3*P1_20_23*P1_22_28+P1_0_1*P1_1_4*P1_21_24*P1_22_28))/((P1_0_2*P1_4_8*P1_15_17*P1_8_12+P1_4_8*P1_15_18*P1_25_27+P1_4_7*P1_14_16*P1_25_27+P1_4_8*P1_15_17*P1_8_13+P1_0_2*P1_4_7*P1_14_15*P1_8_12+P1_4_7*P1_14_15*P1_8_13+(-1)) * (P1_1_4*P1_21_24*P1_22_25*P1_2_6*P1_19_22*P1_23_26+P1_1_3*P1_20_23*P1_22_25*P1_2_5*P1_18_20*P1_23_26+P1_1_4*P1_21_24*P1_22_25*P1_2_5*P1_18_20*P1_23_26+(-1)*P1_1_4*P1_21_31*P1_2_6*P1_19_21*P1_7_9+(-1)*P1_1_3*P1_20_29*P1_2_6*P1_19_21*P1_7_9+(-1)*P1_1_4*P1_21_31*P1_2_5*P1_18_19*P1_7_9+(-1)*P1_2_6*P1_19_22*P1_23_26+(-1)*P1_1_4*P1_21_24*P1_22_25+P1_1_3*P1_20_23*P1_22_25*P1_2_6*P1_19_22*P1_23_26+(-1)*P1_2_5*P1_18_20*P1_23_26+(-1)*P1_1_3*P1_20_23*P1_22_25+(-1)*P1_1_3*P1_20_29*P1_2_5*P1_18_19*P1_7_9+1))); 
prob_f1_s32 =( (-1 * (P1_0_2*P1_4_8*P1_15_18*P1_25_33+P1_0_2*P1_4_7*P1_14_16*P1_25_33))/(P1_0_2*P1_4_8*P1_15_17*P1_8_12+P1_0_2*P1_4_7*P1_14_15*P1_8_12+P1_4_8*P1_15_18*P1_25_27+P1_4_8*P1_15_17*P1_8_13+P1_4_7*P1_14_16*P1_25_27+P1_4_7*P1_14_15*P1_8_13+(-1))); 
prob_f1_s33 =( (P1_0_1*P1_1_4*P1_4_8*P1_21_31*P1_15_18*P1_25_27*P1_2_6*P1_19_22*P1_23_34+P1_0_1*P1_1_3*P1_4_7*P1_20_29*P1_14_15*P1_8_13*P1_2_6*P1_19_22*P1_23_34+P1_0_1*P1_1_4*P1_4_7*P1_21_31*P1_14_15*P1_8_13*P1_2_5*P1_18_20*P1_23_34+P1_0_1*P1_1_3*P1_4_8*P1_20_29*P1_15_17*P1_8_13*P1_2_5*P1_18_20*P1_23_34+P1_0_1*P1_1_4*P1_4_8*P1_21_31*P1_15_17*P1_8_13*P1_2_5*P1_18_20*P1_23_34+P1_0_1*P1_1_3*P1_4_8*P1_20_29*P1_15_17*P1_8_13*P1_2_6*P1_19_22*P1_23_34+P1_0_1*P1_1_4*P1_4_8*P1_21_31*P1_15_17*P1_8_13*P1_2_6*P1_19_22*P1_23_34+P1_0_1*P1_1_3*P1_4_7*P1_20_29*P1_14_16*P1_25_27*P1_2_5*P1_18_20*P1_23_34+P1_0_1*P1_1_4*P1_4_7*P1_21_31*P1_14_16*P1_25_27*P1_2_5*P1_18_20*P1_23_34+P1_0_1*P1_1_3*P1_4_7*P1_20_29*P1_14_16*P1_25_27*P1_2_6*P1_19_22*P1_23_34+P1_0_1*P1_1_4*P1_4_7*P1_21_31*P1_14_16*P1_25_27*P1_2_6*P1_19_22*P1_23_34+P1_0_1*P1_1_3*P1_4_8*P1_20_29*P1_15_18*P1_25_27*P1_2_5*P1_18_20*P1_23_34+P1_0_1*P1_1_4*P1_4_8*P1_21_31*P1_15_18*P1_25_27*P1_2_5*P1_18_20*P1_23_34+P1_0_1*P1_1_3*P1_4_8*P1_20_29*P1_15_18*P1_25_27*P1_2_6*P1_19_22*P1_23_34+P1_0_1*P1_1_4*P1_4_7*P1_21_31*P1_14_15*P1_8_13*P1_2_6*P1_19_22*P1_23_34+P1_0_1*P1_1_3*P1_4_7*P1_20_29*P1_14_15*P1_8_13*P1_2_5*P1_18_20*P1_23_34+(-1)*P1_0_1*P1_1_4*P1_21_31*P1_2_6*P1_19_22*P1_23_34+(-1)*P1_0_1*P1_1_3*P1_20_29*P1_2_6*P1_19_22*P1_23_34+(-1)*P1_0_1*P1_1_3*P1_20_29*P1_2_5*P1_18_20*P1_23_34+(-1)*P1_0_1*P1_1_4*P1_21_31*P1_2_5*P1_18_20*P1_23_34)/((P1_0_2*P1_4_8*P1_15_17*P1_8_12+P1_4_8*P1_15_18*P1_25_27+P1_4_7*P1_14_16*P1_25_27+P1_4_8*P1_15_17*P1_8_13+P1_0_2*P1_4_7*P1_14_15*P1_8_12+P1_4_7*P1_14_15*P1_8_13+(-1)) * (P1_1_4*P1_21_24*P1_22_25*P1_2_6*P1_19_22*P1_23_26+P1_1_3*P1_20_23*P1_22_25*P1_2_5*P1_18_20*P1_23_26+P1_1_4*P1_21_24*P1_22_25*P1_2_5*P1_18_20*P1_23_26+(-1)*P1_1_4*P1_21_31*P1_2_6*P1_19_21*P1_7_9+(-1)*P1_1_3*P1_20_29*P1_2_6*P1_19_21*P1_7_9+(-1)*P1_1_4*P1_21_31*P1_2_5*P1_18_19*P1_7_9+(-1)*P1_2_6*P1_19_22*P1_23_26+(-1)*P1_1_4*P1_21_24*P1_22_25+P1_1_3*P1_20_23*P1_22_25*P1_2_6*P1_19_22*P1_23_26+(-1)*P1_2_5*P1_18_20*P1_23_26+(-1)*P1_1_3*P1_20_23*P1_22_25+(-1)*P1_1_3*P1_20_29*P1_2_5*P1_18_19*P1_7_9+1))); 
P2_6_1 = ((z61)/(z61+z62)); 
P2_6_2 = ((z62)/(z61+z62)); 

prob_f2_s10 =( (P2_6_1)/(1)); 
prob_f2_s11 =( (P2_6_2)/(1)); 
P5_12_1 = ((p51)); 
P5_12_2 = (((-1)*p51+1)); 

prob_f5_s34 =( (P5_12_1)/(1)); 
prob_f5_s37 =( (P5_12_2)/(1)); 
P8_16_1 = ((p31)); 
P8_16_2 = (((-1)*p31+1)); 

prob_f8_s38 =( (P8_16_1)/(1)); 
prob_f8_s41 =( (P8_16_2)/(1)); 
PX_0_1 = (( (z31)/(z31+z32) ) * ( prob_f1_s3 )); 
PX_0_2 = (( (z32)/(z31+z32) ) * ( prob_f1_s3 ));
PX_0_3 = (( (z51)/(z51+z52) ) * ( prob_f1_s5 ));
PX_0_4 = (( (z52)/(z51+z52) ) * ( prob_f1_s5 ));
PX_0_15 = (  ( 1 ) * ( prob_f1_s29 ) + ( 1 ) * ( prob_f1_s32 )  + ( 1 ) * ( prob_f1_s33 ) );
PX_1_6 = ( ( (p61) ) * ( prob_f2_s10 ) + ( (p62) ) * ( prob_f2_s11 ) ); 
PX_1_7 = ( ( ((-1)*p61+1) ) * ( prob_f2_s10 ) + ( ((-1)*p62+1) ) * ( prob_f2_s11 ) );
PX_4_18 = (( 1 ) * ( prob_f5_s34 )); 
PX_4_23 = (( 1 ) * ( prob_f5_s37 ));
PX_7_24 = (( 1 ) * ( prob_f8_s38 )); 
PX_7_29 = (( 1 ) * ( prob_f8_s41 ));
PX_8_12 = ((r6)); 
PX_8_13 = (((-1)*r6+1));
PX_9_20 = (1); 
PX_10_22 = (1); 
PX_11_26 = (1); 
PX_12_28 = (1); 
PX_13_5 = ((1)); 
PX_14_8 = ((p52)); 
PX_14_9 = (((-1)*p52+1));
PX_15_10 = ((p32)); 
PX_15_11 = (((-1)*p32+1));
PX_16_16 = (( (r3) ) * ( (z31)/(z31+z32) )); 
PX_16_25 = (((-1)*r3+1));
PX_16_27 = (( (r3) ) * ( (z32)/(z31+z32) ));
PX_17_17 = (( (r5) ) * ( (z51)/(z51+z52) )); 
PX_17_19 = (((-1)*r5+1));
PX_17_21 = (( (r5) ) * ( (z52)/(z51+z52) ));
PX_18_14 = ((1)); 

Output_abstract_model =( (-1 * (PX_0_4*PX_15_11*PX_4_23*PX_14_8*PX_1_6*PX_16_27*PX_17_17+(-1)*PX_0_4*PX_4_23*PX_14_8*PX_1_6*PX_17_17+(-1)*PX_0_4*PX_7_29*PX_4_18*PX_14_9*PX_1_6*PX_16_16*PX_17_17+(-1)*PX_0_4*PX_7_29*PX_14_8*PX_1_6*PX_16_16+PX_0_4*PX_7_29*PX_4_23*PX_14_8*PX_1_6*PX_16_16*PX_17_17+(-1)*PX_0_4*PX_15_11*PX_4_18*PX_14_9*PX_1_6*PX_16_27*PX_17_17+(-1)*PX_0_4*PX_15_11*PX_14_8*PX_1_6*PX_16_27+PX_0_4*PX_4_18*PX_14_9*PX_1_6*PX_17_17+(-1)*PX_0_3*PX_15_11*PX_4_23*PX_14_8*PX_1_6*PX_16_27*PX_17_21+PX_0_3*PX_4_23*PX_14_8*PX_1_6*PX_17_21+PX_0_3*PX_7_29*PX_4_18*PX_14_9*PX_1_6*PX_16_16*PX_17_21+(-1)*PX_0_3*PX_7_29*PX_4_18*PX_1_6*PX_16_16+(-1)*PX_0_3*PX_7_29*PX_4_23*PX_14_8*PX_1_6*PX_16_16*PX_17_21+PX_0_3*PX_15_11*PX_4_18*PX_14_9*PX_1_6*PX_16_27*PX_17_21+(-1)*PX_0_3*PX_15_11*PX_4_18*PX_1_6*PX_16_27+(-1)*PX_0_3*PX_4_18*PX_14_9*PX_1_6*PX_17_21+PX_0_2*PX_7_29*PX_15_10*PX_14_9*PX_1_6*PX_16_16*PX_17_21+(-1)*PX_0_1*PX_7_24*PX_15_11*PX_1_6*PX_16_27+PX_0_1*PX_7_24*PX_1_6+PX_0_1*PX_7_29*PX_15_10*PX_1_6*PX_16_27+PX_0_2*PX_7_24*PX_15_11*PX_1_6*PX_16_16+(-1)*PX_0_2*PX_7_29*PX_15_10*PX_1_6*PX_16_16+(-1)*PX_0_2*PX_15_10*PX_4_23*PX_1_6*PX_17_17+PX_0_1*PX_7_24*PX_15_11*PX_4_23*PX_1_6*PX_16_27*PX_17_17+(-1)*PX_0_1*PX_7_24*PX_4_23*PX_1_6*PX_17_17+(-1)*PX_0_1*PX_7_29*PX_15_10*PX_4_23*PX_1_6*PX_16_27*PX_17_17+(-1)*PX_0_2*PX_7_24*PX_15_11*PX_4_23*PX_1_6*PX_16_16*PX_17_17+PX_0_2*PX_7_29*PX_15_10*PX_4_23*PX_1_6*PX_16_16*PX_17_17+(-1)*PX_0_2*PX_15_10*PX_14_9*PX_1_6*PX_17_21+PX_0_1*PX_7_24*PX_15_11*PX_14_9*PX_1_6*PX_16_27*PX_17_21+(-1)*PX_0_1*PX_7_24*PX_14_9*PX_1_6*PX_17_21+(-1)*PX_0_1*PX_7_29*PX_15_10*PX_14_9*PX_1_6*PX_16_27*PX_17_21+(-1)*PX_0_2*PX_7_24*PX_15_11*PX_14_9*PX_1_6*PX_16_16*PX_17_21+PX_0_2*PX_15_10*PX_1_6+PX_0_3*PX_4_18*PX_1_6+PX_0_4*PX_14_8*PX_1_6))/((PX_15_11*PX_16_27+PX_7_29*PX_16_16+(-1)) * (PX_14_9*PX_17_21+PX_4_23*PX_17_17+(-1)) * (PX_1_7*PX_8_12+(-1)))); 
