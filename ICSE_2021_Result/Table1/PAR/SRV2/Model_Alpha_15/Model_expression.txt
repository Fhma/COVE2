Min_number = ( 0 ) ; Max_number = ( 15 )
In original model number_of_states = ( 40 ); number_of_transition = ( 63 ) 

Original Transition
0 --- 1  -> (x)
0 --- 4  -> ((-1)*x+1)
1 --- 16  -> (p12*p11)
1 --- 17  -> ((-1)*p12*p11+p11)
1 --- 18  -> ((-1)*p12*p11+p12)
1 --- 19  -> (p12*p11-p11-p12+1)
2 --- 20  -> (p22*p21)
2 --- 21  -> ((-1)*p22*p21+p21)
2 --- 22  -> ((-1)*p22*p21+p22)
2 --- 23  -> (p22*p21-p21-p22+1)
3 --- 24  -> (p32*p31)
3 --- 25  -> ((-1)*p32*p31+p31)
3 --- 26  -> ((-1)*p32*p31+p32)
3 --- 27  -> (p32*p31-p31-p32+1)
4 --- 28  -> (p42*p41)
4 --- 29  -> ((-1)*p42*p41+p41)
4 --- 30  -> ((-1)*p42*p41+p42)
4 --- 31  -> (p42*p41-p41-p42+1)
5 --- 32  -> (p52*p51)
5 --- 33  -> ((-1)*p52*p51+p51)
5 --- 34  -> ((-1)*p52*p51+p52)
5 --- 35  -> (p52*p51-p51-p52+1)
6 --- 36  -> (p62*p61)
6 --- 37  -> ((-1)*p62*p61+p61)
6 --- 38  -> ((-1)*p62*p61+p62)
6 --- 39  -> (p62*p61-p61-p62+1)
7 --- 1  -> (y2)
7 --- 3  -> ((-1)*y1-y2+1)
7 --- 5  -> (y1)
8 --- 0  -> (z2)
8 --- 4  -> ((-1)*z1-z2+1)
8 --- 5  -> (z1)
9 --- 9  -> (1)
10 --- 10  -> (1)
11 --- 11  -> (1)
12 --- 12  -> (1)
13 --- 13  -> (1)
14 --- 14  -> (1)
15 --- 0  -> (1)
16 --- 2  -> (1)
17 --- 2  -> (1)
18 --- 2  -> (1)
19 --- 14  -> (1)
20 --- 7  -> (1)
21 --- 7  -> (1)
22 --- 7  -> (1)
23 --- 13  -> (1)
24 --- 6  -> (1)
25 --- 6  -> (1)
26 --- 6  -> (1)
27 --- 12  -> (1)
28 --- 8  -> (1)
29 --- 8  -> (1)
30 --- 8  -> (1)
31 --- 11  -> (1)
32 --- 6  -> (1)
33 --- 6  -> (1)
34 --- 6  -> (1)
35 --- 10  -> (1)
36 --- 15  -> (1)
37 --- 15  -> (1)
38 --- 15  -> (1)
39 --- 9  -> (1)


In New Model number of states = ( 41 ); number of transition = ( 64 ) 

New transition
0 --- 1  -> (x)
0 --- 4  -> ((-1)*x+1)
1 --- 16  -> (p12*p11)
1 --- 17  -> ((-1)*p12*p11+p11)
1 --- 18  -> ((-1)*p12*p11+p12)
1 --- 19  -> (p12*p11-p11-p12+1)
2 --- 20  -> (p22*p21)
2 --- 21  -> ((-1)*p22*p21+p21)
2 --- 22  -> ((-1)*p22*p21+p22)
3 --- 24  -> (p32*p31)
3 --- 25  -> ((-1)*p32*p31+p31)
3 --- 26  -> ((-1)*p32*p31+p32)
3 --- 27  -> (p32*p31-p31-p32+1)
4 --- 28  -> (p42*p41)
4 --- 29  -> ((-1)*p42*p41+p41)
4 --- 30  -> ((-1)*p42*p41+p42)
4 --- 31  -> (p42*p41-p41-p42+1)
5 --- 32  -> (p52*p51)
5 --- 33  -> ((-1)*p52*p51+p51)
5 --- 34  -> ((-1)*p52*p51+p52)
5 --- 35  -> (p52*p51-p51-p52+1)
6 --- 36  -> (p62*p61)
6 --- 37  -> ((-1)*p62*p61+p61)
6 --- 38  -> ((-1)*p62*p61+p62)
6 --- 39  -> (p62*p61-p61-p62+1)
7 --- 1  -> (y2)
7 --- 3  -> ((-1)*y1-y2+1)
7 --- 5  -> (y1)
8 --- 0  -> (z2)
8 --- 4  -> ((-1)*z1-z2+1)
8 --- 5  -> (z1)
9 --- 9  -> (1)
10 --- 10  -> (1)
11 --- 11  -> (1)
12 --- 12  -> (1)
13 --- 13  -> (1)
14 --- 14  -> (1)
15 --- 0  -> (1)
16 --- 2  -> (1)
17 --- 2  -> (1)
18 --- 2  -> (1)
19 --- 14  -> (1)
20 --- 7  -> (1)
21 --- 7  -> (1)
22 --- 7  -> (1)
23 --- 13  -> (1)
24 --- 6  -> (1)
25 --- 6  -> (1)
26 --- 6  -> (1)
27 --- 12  -> (1)
28 --- 8  -> (1)
29 --- 8  -> (1)
30 --- 8  -> (1)
31 --- 11  -> (1)
32 --- 6  -> (1)
33 --- 6  -> (1)
34 --- 6  -> (1)
35 --- 10  -> (1)
36 --- 15  -> (1)
37 --- 15  -> (1)
38 --- 15  -> (1)
39 --- 9  -> (1)
2 --- 40  -> (p22*p21-p21-p22+1)
40 --- 23  -> 1


State--Fragment Number--visited--startingPoint--endingPoint
   0          1          true        true          false
   1          1          true        false          false
   2          1          true        false          false
   3          1          true        false          true
   4          1          true        false          false
   5          1          true        false          true
   6          2          true        true          false
   7          1          true        false          false
   8          1          true        false          false
   9          12          true        true          true
   10          13          true        true          true
   11          14          true        true          true
   12          15          true        true          true
   13          16          true        true          true
   14          17          true        true          true
   15          18          true        true          true
   16          1          true        false          false
   17          1          true        false          false
   18          1          true        false          false
   19          1          true        false          true
   20          1          true        false          false
   21          1          true        false          false
   22          1          true        false          false
   23          3          true        true          true
   24          4          true        true          true
   25          5          true        true          true
   26          6          true        true          true
   27          7          true        true          true
   28          1          true        false          false
   29          1          true        false          false
   30          1          true        false          false
   31          1          true        false          true
   32          8          true        true          true
   33          9          true        true          true
   34          10          true        true          true
   35          11          true        true          true
   36          2          true        false          true
   37          2          true        false          true
   38          2          true        false          true
   39          2          true        false          true
   40          1          true        false          true

This is transition in Fragment (1) 
    [0, 1]  (x)
    [0, 4]  ((-1)*x+1)
    [1, 16]  (p12*p11)
    [1, 17]  ((-1)*p12*p11+p11)
    [1, 18]  ((-1)*p12*p11+p12)
    [1, 19]  (p12*p11-p11-p12+1)
    [2, 20]  (p22*p21)
    [2, 21]  ((-1)*p22*p21+p21)
    [2, 22]  ((-1)*p22*p21+p22)
    [4, 28]  (p42*p41)
    [4, 29]  ((-1)*p42*p41+p41)
    [4, 30]  ((-1)*p42*p41+p42)
    [4, 31]  (p42*p41-p41-p42+1)
    [7, 1]  (y2)
    [7, 3]  ((-1)*y1-y2+1)
    [7, 5]  (y1)
    [8, 0]  (z2)
    [8, 4]  ((-1)*z1-z2+1)
    [8, 5]  (z1)
    [16, 2]  (1)
    [17, 2]  (1)
    [18, 2]  (1)
    [20, 7]  (1)
    [21, 7]  (1)
    [22, 7]  (1)
    [28, 8]  (1)
    [29, 8]  (1)
    [30, 8]  (1)
    [2, 40]  (p22*p21-p21-p22+1)
    [3, 3]  1
    [5, 5]  1
    [19, 19]  1
    [31, 31]  1
    [40, 40]  1

This is transition in Fragment (2) 
    [6, 36]  (p62*p61)
    [6, 37]  ((-1)*p62*p61+p61)
    [6, 38]  ((-1)*p62*p61+p62)
    [6, 39]  (p62*p61-p61-p62+1)
    [36, 36]  1
    [37, 37]  1
    [38, 38]  1
    [39, 39]  1

This is transition in Fragment (3) 
    [23, 23]  1

This is transition in Fragment (4) 
    [24, 24]  1

This is transition in Fragment (5) 
    [25, 25]  1

This is transition in Fragment (6) 
    [26, 26]  1

This is transition in Fragment (7) 
    [27, 27]  1

This is transition in Fragment (8) 
    [32, 32]  1

This is transition in Fragment (9) 
    [33, 33]  1

This is transition in Fragment (10) 
    [34, 34]  1

This is transition in Fragment (11) 
    [35, 35]  1

This is transition in Fragment (12) 
    [9, 9]  1

This is transition in Fragment (13) 
    [10, 10]  1

This is transition in Fragment (14) 
    [11, 11]  1

This is transition in Fragment (15) 
    [12, 12]  1

This is transition in Fragment (16) 
    [13, 13]  1

This is transition in Fragment (17) 
    [14, 14]  1

This is transition in Fragment (18) 
    [15, 15]  1

This is transition for abstract model 
    [3, 24]  ( (p32*p31) ) * ( prob_f1_s3 )
    [3, 25]  ( ((-1)*p32*p31+p31) ) * ( prob_f1_s3 )
    [3, 26]  ( ((-1)*p32*p31+p32) ) * ( prob_f1_s3 )
    [3, 27]  ( (p32*p31-p31-p32+1) ) * ( prob_f1_s3 )
    [5, 32]  ( (p52*p51) ) * ( prob_f1_s5 )
    [5, 33]  ( ((-1)*p52*p51+p51) ) * ( prob_f1_s5 )
    [5, 34]  ( ((-1)*p52*p51+p52) ) * ( prob_f1_s5 )
    [5, 35]  ( (p52*p51-p51-p52+1) ) * ( prob_f1_s5 )
    [9, 9]  (1)
    [10, 10]  (1)
    [11, 11]  (1)
    [12, 12]  (1)
    [13, 13]  (1)
    [14, 14]  (1)
    [15, 0]  (1)
    [19, 14]  ( (1) ) * ( prob_f1_s19 )
    [23, 13]  (1)
    [24, 6]  (1)
    [25, 6]  (1)
    [26, 6]  (1)
    [27, 12]  (1)
    [31, 11]  ( (1) ) * ( prob_f1_s31 )
    [32, 6]  (1)
    [33, 6]  (1)
    [34, 6]  (1)
    [35, 10]  (1)
    [36, 15]  ( (1) ) * ( prob_f2_s36 )
    [37, 15]  ( (1) ) * ( prob_f2_s37 )
    [38, 15]  ( (1) ) * ( prob_f2_s38 )
    [39, 9]  ( (1) ) * ( prob_f2_s39 )
    [40, 23]  ( 1 ) * ( prob_f1_s40 )
P1_0_1 = ((x)); 
P1_0_2 = (((-1)*x+1)); 
P1_1_3 = ((p12*p11)); 
P1_1_4 = (((-1)*p12*p11+p11)); 
P1_1_5 = (((-1)*p12*p11+p12)); 
P1_1_6 = ((p12*p11-p11-p12+1)); 
P1_2_7 = ((p22*p21)); 
P1_2_8 = (((-1)*p22*p21+p21)); 
P1_2_9 = (((-1)*p22*p21+p22)); 
P1_2_29 = ((p22*p21-p21-p22+1)); 
P1_4_10 = ((p42*p41)); 
P1_4_11 = (((-1)*p42*p41+p41)); 
P1_4_12 = (((-1)*p42*p41+p42)); 
P1_4_13 = ((p42*p41-p41-p42+1)); 
P1_7_14 = ((y2)); 
P1_7_15 = (((-1)*y1-y2+1)); 
P1_7_16 = ((y1)); 
P1_8_17 = ((z2)); 
P1_8_18 = (((-1)*z1-z2+1)); 
P1_8_19 = ((z1)); 
P1_16_20 = ((1)); 
P1_17_21 = ((1)); 
P1_18_22 = ((1)); 
P1_20_23 = ((1)); 
P1_21_24 = ((1)); 
P1_22_25 = ((1)); 
P1_28_26 = ((1)); 
P1_29_27 = ((1)); 
P1_30_28 = ((1)); 

prob_f1_s3 =( (-1 * (P1_0_1*P1_1_5*P1_4_12*P1_2_9*P1_8_18*P1_7_15+P1_0_1*P1_1_5*P1_4_10*P1_2_8*P1_8_18*P1_7_15+P1_0_1*P1_1_4*P1_4_10*P1_2_9*P1_8_18*P1_7_15+P1_0_1*P1_1_3*P1_4_10*P1_2_7*P1_8_18*P1_7_15+P1_0_1*P1_1_3*P1_4_10*P1_2_8*P1_8_18*P1_7_15+P1_0_1*P1_1_4*P1_4_10*P1_2_7*P1_8_18*P1_7_15+P1_0_1*P1_1_4*P1_4_10*P1_2_8*P1_8_18*P1_7_15+P1_0_1*P1_1_3*P1_4_10*P1_2_9*P1_8_18*P1_7_15+P1_0_1*P1_1_5*P1_4_12*P1_2_7*P1_8_18*P1_7_15+P1_0_1*P1_1_3*P1_4_12*P1_2_9*P1_8_18*P1_7_15+P1_0_1*P1_1_4*P1_4_12*P1_2_8*P1_8_18*P1_7_15+P1_0_1*P1_1_4*P1_4_12*P1_2_7*P1_8_18*P1_7_15+P1_0_1*P1_1_3*P1_4_12*P1_2_8*P1_8_18*P1_7_15+P1_0_1*P1_1_3*P1_4_12*P1_2_7*P1_8_18*P1_7_15+P1_0_1*P1_1_4*P1_4_12*P1_2_9*P1_8_18*P1_7_15+P1_0_1*P1_1_5*P1_4_12*P1_2_8*P1_8_18*P1_7_15+P1_0_1*P1_1_5*P1_4_10*P1_2_9*P1_8_18*P1_7_15+P1_0_1*P1_1_5*P1_4_11*P1_2_7*P1_8_18*P1_7_15+P1_0_1*P1_1_3*P1_4_11*P1_2_9*P1_8_18*P1_7_15+P1_0_1*P1_1_4*P1_4_11*P1_2_8*P1_8_18*P1_7_15+P1_0_1*P1_1_4*P1_4_11*P1_2_7*P1_8_18*P1_7_15+P1_0_1*P1_1_3*P1_4_11*P1_2_8*P1_8_18*P1_7_15+P1_0_1*P1_1_3*P1_4_11*P1_2_7*P1_8_18*P1_7_15+P1_0_1*P1_1_4*P1_4_11*P1_2_9*P1_8_18*P1_7_15+P1_0_1*P1_1_5*P1_4_11*P1_2_8*P1_8_18*P1_7_15+P1_0_1*P1_1_5*P1_4_11*P1_2_9*P1_8_18*P1_7_15+P1_0_1*P1_1_5*P1_4_10*P1_2_7*P1_8_18*P1_7_15+(-1)*P1_0_1*P1_1_5*P1_2_9*P1_7_15+(-1)*P1_0_1*P1_1_5*P1_2_8*P1_7_15+(-1)*P1_0_1*P1_1_4*P1_2_9*P1_7_15+(-1)*P1_0_1*P1_1_3*P1_2_7*P1_7_15+(-1)*P1_0_1*P1_1_3*P1_2_8*P1_7_15+(-1)*P1_0_1*P1_1_4*P1_2_7*P1_7_15+(-1)*P1_0_1*P1_1_4*P1_2_8*P1_7_15+(-1)*P1_0_1*P1_1_5*P1_2_7*P1_7_15+(-1)*P1_0_1*P1_1_3*P1_2_9*P1_7_15))/((P1_0_2*P1_4_12*P1_8_17+P1_0_2*P1_4_11*P1_8_17+P1_4_10*P1_8_18+P1_0_2*P1_4_10*P1_8_17+P1_4_12*P1_8_18+P1_4_11*P1_8_18+(-1)) * (P1_1_5*P1_2_9*P1_7_14+P1_1_3*P1_2_9*P1_7_14+P1_1_4*P1_2_9*P1_7_14+P1_1_5*P1_2_8*P1_7_14+P1_1_3*P1_2_8*P1_7_14+P1_1_4*P1_2_8*P1_7_14+P1_1_5*P1_2_7*P1_7_14+P1_1_3*P1_2_7*P1_7_14+P1_1_4*P1_2_7*P1_7_14+(-1)))); 
prob_f1_s5 =( (-1 * (P1_0_2*P1_1_5*P1_4_12*P1_2_9*P1_8_19*P1_7_14+P1_0_2*P1_1_3*P1_4_11*P1_2_9*P1_8_19*P1_7_14+(-1)*P1_0_2*P1_4_11*P1_8_19+(-1)*P1_0_1*P1_1_3*P1_2_9*P1_7_16+(-1)*P1_0_1*P1_1_4*P1_2_8*P1_7_16+(-1)*P1_0_1*P1_1_4*P1_2_7*P1_7_16+(-1)*P1_0_1*P1_1_3*P1_2_8*P1_7_16+(-1)*P1_0_1*P1_1_3*P1_2_7*P1_7_16+(-1)*P1_0_1*P1_1_4*P1_2_9*P1_7_16+(-1)*P1_0_1*P1_1_5*P1_2_8*P1_7_16+(-1)*P1_0_1*P1_1_5*P1_2_9*P1_7_16+P1_0_2*P1_1_5*P1_4_11*P1_2_8*P1_8_19*P1_7_14+P1_0_2*P1_1_3*P1_4_11*P1_2_8*P1_8_19*P1_7_14+P1_0_2*P1_1_4*P1_4_11*P1_2_8*P1_8_19*P1_7_14+P1_0_2*P1_1_5*P1_4_11*P1_2_7*P1_8_19*P1_7_14+P1_0_2*P1_1_3*P1_4_11*P1_2_7*P1_8_19*P1_7_14+P1_0_2*P1_1_4*P1_4_11*P1_2_7*P1_8_19*P1_7_14+P1_0_2*P1_1_5*P1_4_11*P1_2_9*P1_8_19*P1_7_14+(-1)*P1_0_2*P1_4_10*P1_8_19+P1_0_2*P1_1_3*P1_4_10*P1_2_9*P1_8_19*P1_7_14+P1_0_1*P1_1_5*P1_4_10*P1_2_7*P1_8_18*P1_7_16+P1_0_1*P1_1_3*P1_4_10*P1_2_9*P1_8_18*P1_7_16+P1_0_1*P1_1_4*P1_4_10*P1_2_8*P1_8_18*P1_7_16+P1_0_1*P1_1_4*P1_4_10*P1_2_7*P1_8_18*P1_7_16+P1_0_1*P1_1_3*P1_4_10*P1_2_8*P1_8_18*P1_7_16+P1_0_1*P1_1_3*P1_4_10*P1_2_7*P1_8_18*P1_7_16+P1_0_1*P1_1_4*P1_4_10*P1_2_9*P1_8_18*P1_7_16+P1_0_1*P1_1_5*P1_4_10*P1_2_8*P1_8_18*P1_7_16+P1_0_1*P1_1_5*P1_4_10*P1_2_9*P1_8_18*P1_7_16+P1_0_2*P1_1_4*P1_4_10*P1_2_9*P1_8_19*P1_7_14+P1_0_2*P1_1_5*P1_4_10*P1_2_8*P1_8_19*P1_7_14+P1_0_2*P1_1_3*P1_4_10*P1_2_8*P1_8_19*P1_7_14+P1_0_2*P1_1_4*P1_4_10*P1_2_8*P1_8_19*P1_7_14+P1_0_2*P1_1_5*P1_4_10*P1_2_7*P1_8_19*P1_7_14+P1_0_2*P1_1_3*P1_4_10*P1_2_7*P1_8_19*P1_7_14+P1_0_2*P1_1_4*P1_4_10*P1_2_7*P1_8_19*P1_7_14+P1_0_2*P1_1_5*P1_4_10*P1_2_9*P1_8_19*P1_7_14+(-1)*P1_0_2*P1_4_12*P1_8_19+P1_0_1*P1_1_5*P1_4_12*P1_2_7*P1_8_18*P1_7_16+P1_0_1*P1_1_3*P1_4_12*P1_2_9*P1_8_18*P1_7_16+P1_0_1*P1_1_4*P1_4_12*P1_2_8*P1_8_18*P1_7_16+P1_0_1*P1_1_4*P1_4_12*P1_2_7*P1_8_18*P1_7_16+P1_0_1*P1_1_3*P1_4_12*P1_2_8*P1_8_18*P1_7_16+P1_0_1*P1_1_3*P1_4_12*P1_2_7*P1_8_18*P1_7_16+P1_0_1*P1_1_4*P1_4_12*P1_2_9*P1_8_18*P1_7_16+P1_0_1*P1_1_5*P1_4_12*P1_2_8*P1_8_18*P1_7_16+P1_0_1*P1_1_5*P1_4_12*P1_2_9*P1_8_18*P1_7_16+P1_0_1*P1_1_5*P1_4_11*P1_2_7*P1_8_18*P1_7_16+P1_0_1*P1_1_3*P1_4_11*P1_2_9*P1_8_18*P1_7_16+P1_0_1*P1_1_4*P1_4_11*P1_2_8*P1_8_18*P1_7_16+P1_0_1*P1_1_4*P1_4_11*P1_2_7*P1_8_18*P1_7_16+P1_0_1*P1_1_3*P1_4_11*P1_2_8*P1_8_18*P1_7_16+P1_0_1*P1_1_3*P1_4_11*P1_2_7*P1_8_18*P1_7_16+P1_0_1*P1_1_4*P1_4_11*P1_2_9*P1_8_18*P1_7_16+P1_0_1*P1_1_5*P1_4_11*P1_2_8*P1_8_18*P1_7_16+P1_0_1*P1_1_5*P1_4_11*P1_2_9*P1_8_18*P1_7_16+P1_0_2*P1_1_3*P1_4_12*P1_2_9*P1_8_19*P1_7_14+P1_0_2*P1_1_4*P1_4_12*P1_2_9*P1_8_19*P1_7_14+P1_0_2*P1_1_5*P1_4_12*P1_2_8*P1_8_19*P1_7_14+P1_0_2*P1_1_3*P1_4_12*P1_2_8*P1_8_19*P1_7_14+P1_0_2*P1_1_4*P1_4_12*P1_2_8*P1_8_19*P1_7_14+P1_0_2*P1_1_5*P1_4_12*P1_2_7*P1_8_19*P1_7_14+P1_0_2*P1_1_3*P1_4_12*P1_2_7*P1_8_19*P1_7_14+P1_0_2*P1_1_4*P1_4_12*P1_2_7*P1_8_19*P1_7_14+(-1)*P1_0_1*P1_1_5*P1_2_7*P1_7_16+P1_0_2*P1_1_4*P1_4_11*P1_2_9*P1_8_19*P1_7_14))/((P1_0_2*P1_4_12*P1_8_17+P1_0_2*P1_4_11*P1_8_17+P1_4_10*P1_8_18+P1_0_2*P1_4_10*P1_8_17+P1_4_12*P1_8_18+P1_4_11*P1_8_18+(-1)) * (P1_1_5*P1_2_9*P1_7_14+P1_1_3*P1_2_9*P1_7_14+P1_1_4*P1_2_9*P1_7_14+P1_1_5*P1_2_8*P1_7_14+P1_1_3*P1_2_8*P1_7_14+P1_1_4*P1_2_8*P1_7_14+P1_1_5*P1_2_7*P1_7_14+P1_1_3*P1_2_7*P1_7_14+P1_1_4*P1_2_7*P1_7_14+(-1)))); 
prob_f1_s19 =( (-1 * (P1_0_1*P1_1_6*P1_4_12*P1_8_18+P1_0_1*P1_1_6*P1_4_10*P1_8_18+(-1)*P1_0_1*P1_1_6+P1_0_1*P1_1_6*P1_4_11*P1_8_18))/((P1_0_2*P1_4_12*P1_8_17+P1_0_2*P1_4_11*P1_8_17+P1_4_10*P1_8_18+P1_0_2*P1_4_10*P1_8_17+P1_4_12*P1_8_18+P1_4_11*P1_8_18+(-1)) * (P1_1_5*P1_2_9*P1_7_14+P1_1_3*P1_2_9*P1_7_14+P1_1_4*P1_2_9*P1_7_14+P1_1_5*P1_2_8*P1_7_14+P1_1_3*P1_2_8*P1_7_14+P1_1_4*P1_2_8*P1_7_14+P1_1_5*P1_2_7*P1_7_14+P1_1_3*P1_2_7*P1_7_14+P1_1_4*P1_2_7*P1_7_14+(-1)))); 
prob_f1_s31 =( (-1 * (P1_0_2*P1_4_13))/(P1_0_2*P1_4_12*P1_8_17+P1_0_2*P1_4_11*P1_8_17+P1_4_10*P1_8_18+P1_0_2*P1_4_10*P1_8_17+P1_4_12*P1_8_18+P1_4_11*P1_8_18+(-1))); 
prob_f1_s40 =( (-1 * (P1_0_1*P1_1_5*P1_4_12*P1_2_29*P1_8_18+P1_0_1*P1_1_3*P1_4_10*P1_2_29*P1_8_18+P1_0_1*P1_1_3*P1_4_11*P1_2_29*P1_8_18+(-1)*P1_0_1*P1_1_3*P1_2_29+(-1)*P1_0_1*P1_1_5*P1_2_29+P1_0_1*P1_1_5*P1_4_11*P1_2_29*P1_8_18+P1_0_1*P1_1_3*P1_4_12*P1_2_29*P1_8_18+P1_0_1*P1_1_4*P1_4_10*P1_2_29*P1_8_18+P1_0_1*P1_1_5*P1_4_10*P1_2_29*P1_8_18+P1_0_1*P1_1_4*P1_4_12*P1_2_29*P1_8_18+(-1)*P1_0_1*P1_1_4*P1_2_29+P1_0_1*P1_1_4*P1_4_11*P1_2_29*P1_8_18))/((P1_0_2*P1_4_12*P1_8_17+P1_0_2*P1_4_11*P1_8_17+P1_4_10*P1_8_18+P1_0_2*P1_4_10*P1_8_17+P1_4_12*P1_8_18+P1_4_11*P1_8_18+(-1)) * (P1_1_5*P1_2_9*P1_7_14+P1_1_3*P1_2_9*P1_7_14+P1_1_4*P1_2_9*P1_7_14+P1_1_5*P1_2_8*P1_7_14+P1_1_3*P1_2_8*P1_7_14+P1_1_4*P1_2_8*P1_7_14+P1_1_5*P1_2_7*P1_7_14+P1_1_3*P1_2_7*P1_7_14+P1_1_4*P1_2_7*P1_7_14+(-1)))); 
P2_6_1 = ((p62*p61)); 
P2_6_2 = (((-1)*p62*p61+p61)); 
P2_6_3 = (((-1)*p62*p61+p62)); 
P2_6_4 = ((p62*p61-p61-p62+1)); 

prob_f2_s36 =( (P2_6_1)/(1)); 
prob_f2_s37 =( (P2_6_2)/(1)); 
prob_f2_s38 =( (P2_6_3)/(1)); 
prob_f2_s39 =( (P2_6_4)/(1)); 
PX_0_1 = (( (p32*p31) ) * ( prob_f1_s3 )); 
PX_0_2 = (( ((-1)*p32*p31+p31) ) * ( prob_f1_s3 ));
PX_0_3 = (( ((-1)*p32*p31+p32) ) * ( prob_f1_s3 ));
PX_0_4 = (( (p32*p31-p31-p32+1) ) * ( prob_f1_s3 ));
PX_0_5 = (( (p52*p51) ) * ( prob_f1_s5 ));
PX_0_6 = (( ((-1)*p52*p51+p51) ) * ( prob_f1_s5 ));
PX_0_7 = (( ((-1)*p52*p51+p52) ) * ( prob_f1_s5 ));
PX_0_8 = (( (p52*p51-p51-p52+1) ) * ( prob_f1_s5 ));
PX_0_16 = (( (1) ) * ( prob_f1_s19 ));
PX_0_22 = (( (1) ) * ( prob_f1_s31 ));
PX_0_29 = (( 1 ) * ( prob_f1_s40 ));
PX_1_27 = (  ( (1) ) * ( prob_f2_s36 ) + ( (1) ) * ( prob_f2_s37 )  + ( (1) ) * ( prob_f2_s38 ) ); 
PX_1_28 = (( (1) ) * ( prob_f2_s39 ));
PX_2_17 = ((1)); 
PX_3_18 = ((1)); 
PX_4_19 = ((1)); 
PX_5_20 = ((1)); 
PX_6_21 = ((1)); 
PX_7_23 = ((1)); 
PX_8_24 = ((1)); 
PX_9_25 = ((1)); 
PX_10_26 = ((1)); 
PX_11_9 = ((1)); 
PX_12_10 = ((1)); 
PX_13_11 = ((1)); 
PX_14_12 = ((1)); 
PX_15_13 = ((1)); 
PX_16_14 = ((1)); 
PX_17_15 = ((1)); 

Output_abstract_model =( ((PX_0_7+PX_0_1+PX_0_2+PX_0_3+PX_0_5+PX_0_6) * (PX_1_27))/(1)); 
